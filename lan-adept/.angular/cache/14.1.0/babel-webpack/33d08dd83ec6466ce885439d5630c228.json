{"ast":null,"code":"import { ErrorFactory, contains, deepExtend, createSubscribe, isBrowser } from '@firebase/util';\nimport { Component } from '@firebase/component';\nimport * as modularAPIs from '@firebase/app';\nimport { _addComponent, deleteApp, _DEFAULT_ENTRY_NAME, _addOrOverwriteComponent, registerVersion } from '@firebase/app';\nimport { Logger } from '@firebase/logger';\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Global context object for a collection of services using\r\n * a shared authentication state.\r\n *\r\n * marked as internal because it references internal types exported from @firebase/app\r\n * @internal\r\n */\n\nclass FirebaseAppImpl {\n  constructor(_delegate, firebase) {\n    this._delegate = _delegate;\n    this.firebase = firebase; // add itself to container\n\n    _addComponent(_delegate, new Component('app-compat', () => this, \"PUBLIC\"\n    /* PUBLIC */\n    ));\n\n    this.container = _delegate.container;\n  }\n\n  get automaticDataCollectionEnabled() {\n    return this._delegate.automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val) {\n    this._delegate.automaticDataCollectionEnabled = val;\n  }\n\n  get name() {\n    return this._delegate.name;\n  }\n\n  get options() {\n    return this._delegate.options;\n  }\n\n  delete() {\n    return new Promise(resolve => {\n      this._delegate.checkDestroyed();\n\n      resolve();\n    }).then(() => {\n      this.firebase.INTERNAL.removeApp(this.name);\n      return deleteApp(this._delegate);\n    });\n  }\n  /**\r\n   * Return a service instance associated with this app (creating it\r\n   * on demand), identified by the passed instanceIdentifier.\r\n   *\r\n   * NOTE: Currently storage and functions are the only ones that are leveraging this\r\n   * functionality. They invoke it by calling:\r\n   *\r\n   * ```javascript\r\n   * firebase.app().storage('STORAGE BUCKET ID')\r\n   * ```\r\n   *\r\n   * The service name is passed to this already\r\n   * @internal\r\n   */\n\n\n  _getService(name, instanceIdentifier = _DEFAULT_ENTRY_NAME) {\n    var _a;\n\n    this._delegate.checkDestroyed(); // Initialize instance if InstatiationMode is `EXPLICIT`.\n\n\n    const provider = this._delegate.container.getProvider(name);\n\n    if (!provider.isInitialized() && ((_a = provider.getComponent()) === null || _a === void 0 ? void 0 : _a.instantiationMode) === \"EXPLICIT\"\n    /* EXPLICIT */\n    ) {\n      provider.initialize();\n    } // getImmediate will always succeed because _getService is only called for registered components.\n\n\n    return provider.getImmediate({\n      identifier: instanceIdentifier\n    });\n  }\n  /**\r\n   * Remove a service instance from the cache, so we will create a new instance for this service\r\n   * when people try to get it again.\r\n   *\r\n   * NOTE: currently only firestore uses this functionality to support firestore shutdown.\r\n   *\r\n   * @param name The service name\r\n   * @param instanceIdentifier instance identifier in case multiple instances are allowed\r\n   * @internal\r\n   */\n\n\n  _removeServiceInstance(name, instanceIdentifier = _DEFAULT_ENTRY_NAME) {\n    this._delegate.container // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    .getProvider(name).clearInstance(instanceIdentifier);\n  }\n  /**\r\n   * @param component the component being added to this app's container\r\n   * @internal\r\n   */\n\n\n  _addComponent(component) {\n    _addComponent(this._delegate, component);\n  }\n\n  _addOrOverwriteComponent(component) {\n    _addOrOverwriteComponent(this._delegate, component);\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      automaticDataCollectionEnabled: this.automaticDataCollectionEnabled,\n      options: this.options\n    };\n  }\n\n} // TODO: investigate why the following needs to be commented out\n// Prevent dead-code elimination of these methods w/o invalid property\n// copying.\n// (FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||\n//   FirebaseAppImpl.prototype.delete ||\n//   console.log('dc');\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nconst ERRORS = {\n  [\"no-app\"\n  /* NO_APP */\n  ]: \"No Firebase App '{$appName}' has been created - \" + 'call Firebase App.initializeApp()',\n  [\"invalid-app-argument\"\n  /* INVALID_APP_ARGUMENT */\n  ]: 'firebase.{$appName}() takes either no argument or a ' + 'Firebase App instance.'\n};\nconst ERROR_FACTORY = new ErrorFactory('app-compat', 'Firebase', ERRORS);\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Because auth can't share code with other components, we attach the utility functions\r\n * in an internal namespace to share code.\r\n * This function return a firebase namespace object without\r\n * any utility functions, so it can be shared between the regular firebaseNamespace and\r\n * the lite version.\r\n */\n\nfunction createFirebaseNamespaceCore(firebaseAppImpl) {\n  const apps = {}; // // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  // const components = new Map<string, Component<any>>();\n  // A namespace is a plain JavaScript Object.\n\n  const namespace = {\n    // Hack to prevent Babel from modifying the object returned\n    // as the firebase namespace.\n    // @ts-ignore\n    __esModule: true,\n    initializeApp: initializeAppCompat,\n    // @ts-ignore\n    app,\n    registerVersion: modularAPIs.registerVersion,\n    setLogLevel: modularAPIs.setLogLevel,\n    onLog: modularAPIs.onLog,\n    // @ts-ignore\n    apps: null,\n    SDK_VERSION: modularAPIs.SDK_VERSION,\n    INTERNAL: {\n      registerComponent: registerComponentCompat,\n      removeApp,\n      useAsService,\n      modularAPIs\n    }\n  }; // Inject a circular default export to allow Babel users who were previously\n  // using:\n  //\n  //   import firebase from 'firebase';\n  //   which becomes: var firebase = require('firebase').default;\n  //\n  // instead of\n  //\n  //   import * as firebase from 'firebase';\n  //   which becomes: var firebase = require('firebase');\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  namespace['default'] = namespace; // firebase.apps is a read-only getter.\n\n  Object.defineProperty(namespace, 'apps', {\n    get: getApps\n  });\n  /**\r\n   * Called by App.delete() - but before any services associated with the App\r\n   * are deleted.\r\n   */\n\n  function removeApp(name) {\n    delete apps[name];\n  }\n  /**\r\n   * Get the App object for a given name (or DEFAULT).\r\n   */\n\n\n  function app(name) {\n    name = name || modularAPIs._DEFAULT_ENTRY_NAME;\n\n    if (!contains(apps, name)) {\n      throw ERROR_FACTORY.create(\"no-app\"\n      /* NO_APP */\n      , {\n        appName: name\n      });\n    }\n\n    return apps[name];\n  } // @ts-ignore\n\n\n  app['App'] = firebaseAppImpl;\n  /**\r\n   * Create a new App instance (name must be unique).\r\n   *\r\n   * This function is idempotent. It can be called more than once and return the same instance using the same options and config.\r\n   */\n\n  function initializeAppCompat(options, rawConfig = {}) {\n    const app = modularAPIs.initializeApp(options, rawConfig);\n\n    if (contains(apps, app.name)) {\n      return apps[app.name];\n    }\n\n    const appCompat = new firebaseAppImpl(app, namespace);\n    apps[app.name] = appCompat;\n    return appCompat;\n  }\n  /*\r\n   * Return an array of all the non-deleted FirebaseApps.\r\n   */\n\n\n  function getApps() {\n    // Make a copy so caller cannot mutate the apps list.\n    return Object.keys(apps).map(name => apps[name]);\n  }\n\n  function registerComponentCompat(component) {\n    const componentName = component.name;\n    const componentNameWithoutCompat = componentName.replace('-compat', '');\n\n    if (modularAPIs._registerComponent(component) && component.type === \"PUBLIC\"\n    /* PUBLIC */\n    ) {\n      // create service namespace for public components\n      // The Service namespace is an accessor function ...\n      const serviceNamespace = (appArg = app()) => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (typeof appArg[componentNameWithoutCompat] !== 'function') {\n          // Invalid argument.\n          // This happens in the following case: firebase.storage('gs:/')\n          throw ERROR_FACTORY.create(\"invalid-app-argument\"\n          /* INVALID_APP_ARGUMENT */\n          , {\n            appName: componentName\n          });\n        } // Forward service instance lookup to the FirebaseApp.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n        return appArg[componentNameWithoutCompat]();\n      }; // ... and a container for service-level properties.\n\n\n      if (component.serviceProps !== undefined) {\n        deepExtend(serviceNamespace, component.serviceProps);\n      } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n      namespace[componentNameWithoutCompat] = serviceNamespace; // Patch the FirebaseAppImpl prototype\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      firebaseAppImpl.prototype[componentNameWithoutCompat] = // TODO: The eslint disable can be removed and the 'ignoreRestArgs'\n      // option added to the no-explicit-any rule when ESlint releases it.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      function (...args) {\n        const serviceFxn = this._getService.bind(this, componentName);\n\n        return serviceFxn.apply(this, component.multipleInstances ? args : []);\n      };\n    }\n\n    return component.type === \"PUBLIC\"\n    /* PUBLIC */\n    ? // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    namespace[componentNameWithoutCompat] : null;\n  } // Map the requested service to a registered service name\n  // (used to map auth to serverAuth service when needed).\n\n\n  function useAsService(app, name) {\n    if (name === 'serverAuth') {\n      return null;\n    }\n\n    const useService = name;\n    return useService;\n  }\n\n  return namespace;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Return a firebase namespace object.\r\n *\r\n * In production, this will be called exactly once and the result\r\n * assigned to the 'firebase' global.  It may be called multiple times\r\n * in unit tests.\r\n */\n\n\nfunction createFirebaseNamespace() {\n  const namespace = createFirebaseNamespaceCore(FirebaseAppImpl);\n  namespace.INTERNAL = Object.assign(Object.assign({}, namespace.INTERNAL), {\n    createFirebaseNamespace,\n    extendNamespace,\n    createSubscribe,\n    ErrorFactory,\n    deepExtend\n  });\n  /**\r\n   * Patch the top-level firebase namespace with additional properties.\r\n   *\r\n   * firebase.INTERNAL.extendNamespace()\r\n   */\n\n  function extendNamespace(props) {\n    deepExtend(namespace, props);\n  }\n\n  return namespace;\n}\n\nconst firebase$1 = createFirebaseNamespace();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nconst logger = new Logger('@firebase/app-compat');\nconst name = \"@firebase/app-compat\";\nconst version = \"0.1.30\";\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nfunction registerCoreComponents(variant) {\n  // Register `app` package.\n  registerVersion(name, version, variant);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Firebase Lite detection\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nif (isBrowser() && self.firebase !== undefined) {\n  logger.warn(`\n    Warning: Firebase is already defined in the global scope. Please make sure\n    Firebase library is only loaded once.\n  `); // eslint-disable-next-line\n\n  const sdkVersion = self.firebase.SDK_VERSION;\n\n  if (sdkVersion && sdkVersion.indexOf('LITE') >= 0) {\n    logger.warn(`\n    Warning: You are trying to load Firebase while using Firebase Performance standalone script.\n    You should load Firebase Performance with this instance of Firebase to avoid loading duplicate code.\n    `);\n  }\n}\n\nconst firebase = firebase$1;\nregisterCoreComponents();\nexport { firebase as default };","map":{"version":3,"names":["ErrorFactory","contains","deepExtend","createSubscribe","isBrowser","Component","modularAPIs","_addComponent","deleteApp","_DEFAULT_ENTRY_NAME","_addOrOverwriteComponent","registerVersion","Logger","FirebaseAppImpl","constructor","_delegate","firebase","container","automaticDataCollectionEnabled","val","name","options","delete","Promise","resolve","checkDestroyed","then","INTERNAL","removeApp","_getService","instanceIdentifier","_a","provider","getProvider","isInitialized","getComponent","instantiationMode","initialize","getImmediate","identifier","_removeServiceInstance","clearInstance","component","toJSON","ERRORS","ERROR_FACTORY","createFirebaseNamespaceCore","firebaseAppImpl","apps","namespace","__esModule","initializeApp","initializeAppCompat","app","setLogLevel","onLog","SDK_VERSION","registerComponent","registerComponentCompat","useAsService","Object","defineProperty","get","getApps","create","appName","rawConfig","appCompat","keys","map","componentName","componentNameWithoutCompat","replace","_registerComponent","type","serviceNamespace","appArg","serviceProps","undefined","prototype","args","serviceFxn","bind","apply","multipleInstances","useService","createFirebaseNamespace","assign","extendNamespace","props","firebase$1","logger","version","registerCoreComponents","variant","self","warn","sdkVersion","indexOf","default"],"sources":["C:/Users/Felix/Desktop/lan.adeptinfo.ca/lan-adept/node_modules/@firebase/app-compat/dist/esm/index.esm2017.js"],"sourcesContent":["import { ErrorFactory, contains, deepExtend, createSubscribe, isBrowser } from '@firebase/util';\nimport { Component } from '@firebase/component';\nimport * as modularAPIs from '@firebase/app';\nimport { _addComponent, deleteApp, _DEFAULT_ENTRY_NAME, _addOrOverwriteComponent, registerVersion } from '@firebase/app';\nimport { Logger } from '@firebase/logger';\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Global context object for a collection of services using\r\n * a shared authentication state.\r\n *\r\n * marked as internal because it references internal types exported from @firebase/app\r\n * @internal\r\n */\r\nclass FirebaseAppImpl {\r\n    constructor(_delegate, firebase) {\r\n        this._delegate = _delegate;\r\n        this.firebase = firebase;\r\n        // add itself to container\r\n        _addComponent(_delegate, new Component('app-compat', () => this, \"PUBLIC\" /* PUBLIC */));\r\n        this.container = _delegate.container;\r\n    }\r\n    get automaticDataCollectionEnabled() {\r\n        return this._delegate.automaticDataCollectionEnabled;\r\n    }\r\n    set automaticDataCollectionEnabled(val) {\r\n        this._delegate.automaticDataCollectionEnabled = val;\r\n    }\r\n    get name() {\r\n        return this._delegate.name;\r\n    }\r\n    get options() {\r\n        return this._delegate.options;\r\n    }\r\n    delete() {\r\n        return new Promise(resolve => {\r\n            this._delegate.checkDestroyed();\r\n            resolve();\r\n        }).then(() => {\r\n            this.firebase.INTERNAL.removeApp(this.name);\r\n            return deleteApp(this._delegate);\r\n        });\r\n    }\r\n    /**\r\n     * Return a service instance associated with this app (creating it\r\n     * on demand), identified by the passed instanceIdentifier.\r\n     *\r\n     * NOTE: Currently storage and functions are the only ones that are leveraging this\r\n     * functionality. They invoke it by calling:\r\n     *\r\n     * ```javascript\r\n     * firebase.app().storage('STORAGE BUCKET ID')\r\n     * ```\r\n     *\r\n     * The service name is passed to this already\r\n     * @internal\r\n     */\r\n    _getService(name, instanceIdentifier = _DEFAULT_ENTRY_NAME) {\r\n        var _a;\r\n        this._delegate.checkDestroyed();\r\n        // Initialize instance if InstatiationMode is `EXPLICIT`.\r\n        const provider = this._delegate.container.getProvider(name);\r\n        if (!provider.isInitialized() &&\r\n            ((_a = provider.getComponent()) === null || _a === void 0 ? void 0 : _a.instantiationMode) === \"EXPLICIT\" /* EXPLICIT */) {\r\n            provider.initialize();\r\n        }\r\n        // getImmediate will always succeed because _getService is only called for registered components.\r\n        return provider.getImmediate({\r\n            identifier: instanceIdentifier\r\n        });\r\n    }\r\n    /**\r\n     * Remove a service instance from the cache, so we will create a new instance for this service\r\n     * when people try to get it again.\r\n     *\r\n     * NOTE: currently only firestore uses this functionality to support firestore shutdown.\r\n     *\r\n     * @param name The service name\r\n     * @param instanceIdentifier instance identifier in case multiple instances are allowed\r\n     * @internal\r\n     */\r\n    _removeServiceInstance(name, instanceIdentifier = _DEFAULT_ENTRY_NAME) {\r\n        this._delegate.container\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            .getProvider(name)\r\n            .clearInstance(instanceIdentifier);\r\n    }\r\n    /**\r\n     * @param component the component being added to this app's container\r\n     * @internal\r\n     */\r\n    _addComponent(component) {\r\n        _addComponent(this._delegate, component);\r\n    }\r\n    _addOrOverwriteComponent(component) {\r\n        _addOrOverwriteComponent(this._delegate, component);\r\n    }\r\n    toJSON() {\r\n        return {\r\n            name: this.name,\r\n            automaticDataCollectionEnabled: this.automaticDataCollectionEnabled,\r\n            options: this.options\r\n        };\r\n    }\r\n}\r\n// TODO: investigate why the following needs to be commented out\r\n// Prevent dead-code elimination of these methods w/o invalid property\r\n// copying.\r\n// (FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||\r\n//   FirebaseAppImpl.prototype.delete ||\r\n//   console.log('dc');\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst ERRORS = {\r\n    [\"no-app\" /* NO_APP */]: \"No Firebase App '{$appName}' has been created - \" +\r\n        'call Firebase App.initializeApp()',\r\n    [\"invalid-app-argument\" /* INVALID_APP_ARGUMENT */]: 'firebase.{$appName}() takes either no argument or a ' +\r\n        'Firebase App instance.'\r\n};\r\nconst ERROR_FACTORY = new ErrorFactory('app-compat', 'Firebase', ERRORS);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Because auth can't share code with other components, we attach the utility functions\r\n * in an internal namespace to share code.\r\n * This function return a firebase namespace object without\r\n * any utility functions, so it can be shared between the regular firebaseNamespace and\r\n * the lite version.\r\n */\r\nfunction createFirebaseNamespaceCore(firebaseAppImpl) {\r\n    const apps = {};\r\n    // // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    // const components = new Map<string, Component<any>>();\r\n    // A namespace is a plain JavaScript Object.\r\n    const namespace = {\r\n        // Hack to prevent Babel from modifying the object returned\r\n        // as the firebase namespace.\r\n        // @ts-ignore\r\n        __esModule: true,\r\n        initializeApp: initializeAppCompat,\r\n        // @ts-ignore\r\n        app,\r\n        registerVersion: modularAPIs.registerVersion,\r\n        setLogLevel: modularAPIs.setLogLevel,\r\n        onLog: modularAPIs.onLog,\r\n        // @ts-ignore\r\n        apps: null,\r\n        SDK_VERSION: modularAPIs.SDK_VERSION,\r\n        INTERNAL: {\r\n            registerComponent: registerComponentCompat,\r\n            removeApp,\r\n            useAsService,\r\n            modularAPIs\r\n        }\r\n    };\r\n    // Inject a circular default export to allow Babel users who were previously\r\n    // using:\r\n    //\r\n    //   import firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase').default;\r\n    //\r\n    // instead of\r\n    //\r\n    //   import * as firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase');\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    namespace['default'] = namespace;\r\n    // firebase.apps is a read-only getter.\r\n    Object.defineProperty(namespace, 'apps', {\r\n        get: getApps\r\n    });\r\n    /**\r\n     * Called by App.delete() - but before any services associated with the App\r\n     * are deleted.\r\n     */\r\n    function removeApp(name) {\r\n        delete apps[name];\r\n    }\r\n    /**\r\n     * Get the App object for a given name (or DEFAULT).\r\n     */\r\n    function app(name) {\r\n        name = name || modularAPIs._DEFAULT_ENTRY_NAME;\r\n        if (!contains(apps, name)) {\r\n            throw ERROR_FACTORY.create(\"no-app\" /* NO_APP */, { appName: name });\r\n        }\r\n        return apps[name];\r\n    }\r\n    // @ts-ignore\r\n    app['App'] = firebaseAppImpl;\r\n    /**\r\n     * Create a new App instance (name must be unique).\r\n     *\r\n     * This function is idempotent. It can be called more than once and return the same instance using the same options and config.\r\n     */\r\n    function initializeAppCompat(options, rawConfig = {}) {\r\n        const app = modularAPIs.initializeApp(options, rawConfig);\r\n        if (contains(apps, app.name)) {\r\n            return apps[app.name];\r\n        }\r\n        const appCompat = new firebaseAppImpl(app, namespace);\r\n        apps[app.name] = appCompat;\r\n        return appCompat;\r\n    }\r\n    /*\r\n     * Return an array of all the non-deleted FirebaseApps.\r\n     */\r\n    function getApps() {\r\n        // Make a copy so caller cannot mutate the apps list.\r\n        return Object.keys(apps).map(name => apps[name]);\r\n    }\r\n    function registerComponentCompat(component) {\r\n        const componentName = component.name;\r\n        const componentNameWithoutCompat = componentName.replace('-compat', '');\r\n        if (modularAPIs._registerComponent(component) &&\r\n            component.type === \"PUBLIC\" /* PUBLIC */) {\r\n            // create service namespace for public components\r\n            // The Service namespace is an accessor function ...\r\n            const serviceNamespace = (appArg = app()) => {\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                if (typeof appArg[componentNameWithoutCompat] !== 'function') {\r\n                    // Invalid argument.\r\n                    // This happens in the following case: firebase.storage('gs:/')\r\n                    throw ERROR_FACTORY.create(\"invalid-app-argument\" /* INVALID_APP_ARGUMENT */, {\r\n                        appName: componentName\r\n                    });\r\n                }\r\n                // Forward service instance lookup to the FirebaseApp.\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                return appArg[componentNameWithoutCompat]();\r\n            };\r\n            // ... and a container for service-level properties.\r\n            if (component.serviceProps !== undefined) {\r\n                deepExtend(serviceNamespace, component.serviceProps);\r\n            }\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            namespace[componentNameWithoutCompat] = serviceNamespace;\r\n            // Patch the FirebaseAppImpl prototype\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            firebaseAppImpl.prototype[componentNameWithoutCompat] =\r\n                // TODO: The eslint disable can be removed and the 'ignoreRestArgs'\r\n                // option added to the no-explicit-any rule when ESlint releases it.\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                function (...args) {\r\n                    const serviceFxn = this._getService.bind(this, componentName);\r\n                    return serviceFxn.apply(this, component.multipleInstances ? args : []);\r\n                };\r\n        }\r\n        return component.type === \"PUBLIC\" /* PUBLIC */\r\n            ? // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                namespace[componentNameWithoutCompat]\r\n            : null;\r\n    }\r\n    // Map the requested service to a registered service name\r\n    // (used to map auth to serverAuth service when needed).\r\n    function useAsService(app, name) {\r\n        if (name === 'serverAuth') {\r\n            return null;\r\n        }\r\n        const useService = name;\r\n        return useService;\r\n    }\r\n    return namespace;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Return a firebase namespace object.\r\n *\r\n * In production, this will be called exactly once and the result\r\n * assigned to the 'firebase' global.  It may be called multiple times\r\n * in unit tests.\r\n */\r\nfunction createFirebaseNamespace() {\r\n    const namespace = createFirebaseNamespaceCore(FirebaseAppImpl);\r\n    namespace.INTERNAL = Object.assign(Object.assign({}, namespace.INTERNAL), { createFirebaseNamespace,\r\n        extendNamespace,\r\n        createSubscribe,\r\n        ErrorFactory,\r\n        deepExtend });\r\n    /**\r\n     * Patch the top-level firebase namespace with additional properties.\r\n     *\r\n     * firebase.INTERNAL.extendNamespace()\r\n     */\r\n    function extendNamespace(props) {\r\n        deepExtend(namespace, props);\r\n    }\r\n    return namespace;\r\n}\r\nconst firebase$1 = createFirebaseNamespace();\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst logger = new Logger('@firebase/app-compat');\n\nconst name = \"@firebase/app-compat\";\nconst version = \"0.1.30\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerCoreComponents(variant) {\r\n    // Register `app` package.\r\n    registerVersion(name, version, variant);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Firebase Lite detection\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nif (isBrowser() && self.firebase !== undefined) {\r\n    logger.warn(`\n    Warning: Firebase is already defined in the global scope. Please make sure\n    Firebase library is only loaded once.\n  `);\r\n    // eslint-disable-next-line\r\n    const sdkVersion = self.firebase.SDK_VERSION;\r\n    if (sdkVersion && sdkVersion.indexOf('LITE') >= 0) {\r\n        logger.warn(`\n    Warning: You are trying to load Firebase while using Firebase Performance standalone script.\n    You should load Firebase Performance with this instance of Firebase to avoid loading duplicate code.\n    `);\r\n    }\r\n}\r\nconst firebase = firebase$1;\r\nregisterCoreComponents();\n\nexport { firebase as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}