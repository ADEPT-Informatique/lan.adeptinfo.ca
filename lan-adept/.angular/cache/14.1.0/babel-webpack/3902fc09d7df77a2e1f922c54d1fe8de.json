{"ast":null,"code":"import { getApps as getApps$1, getApp as getApp$1, registerVersion as registerVersion$1, deleteApp as deleteApp$1, initializeApp as initializeApp$1, onLog as onLog$1, setLogLevel as setLogLevel$1 } from 'firebase/app';\nexport * from 'firebase/app';\nimport { timer, from } from 'rxjs';\nimport { concatMap, distinct } from 'rxjs/operators';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Optional, VERSION as VERSION$1, PLATFORM_ID, NgModule, Inject, NgZone, Injector } from '@angular/core';\nimport { VERSION, ɵAngularFireSchedulers, ɵzoneWrap } from '@angular/fire';\n\nclass FirebaseApp {\n  constructor(app) {\n    return app;\n  }\n\n}\n\nclass FirebaseApps {\n  constructor() {\n    return getApps$1();\n  }\n\n}\n\nconst firebaseApp$ = timer(0, 300).pipe(concatMap(() => from(getApps$1())), distinct());\n\nfunction defaultFirebaseAppFactory(provided) {\n  // Use the provided app, if there is only one, otherwise fetch the default app\n  if (provided && provided.length === 1) {\n    return provided[0];\n  }\n\n  return new FirebaseApp(getApp$1());\n} // With FIREBASE_APPS I wanted to capture the default app instance, if it is initialized by\n// the reserved URL; ɵPROVIDED_FIREBASE_APPS is not for public consumption and serves to ensure that all\n// provideFirebaseApp(...) calls are satisfied before FirebaseApp$ or FirebaseApp is resolved\n\n\nconst PROVIDED_FIREBASE_APPS = new InjectionToken('angularfire2._apps'); // Injecting FirebaseApp will now only inject the default Firebase App\n// this allows allows beginners to import /__/firebase/init.js to auto initialize Firebase App\n// from the reserved URL.\n\nconst DEFAULT_FIREBASE_APP_PROVIDER = {\n  provide: FirebaseApp,\n  useFactory: defaultFirebaseAppFactory,\n  deps: [[new Optional(), PROVIDED_FIREBASE_APPS]]\n};\nconst FIREBASE_APPS_PROVIDER = {\n  provide: FirebaseApps,\n  deps: [[new Optional(), PROVIDED_FIREBASE_APPS]]\n};\n\nfunction firebaseAppFactory(fn) {\n  return (zone, injector) => {\n    const app = zone.runOutsideAngular(() => fn(injector));\n    return new FirebaseApp(app);\n  };\n}\n\nclass FirebaseAppModule {\n  // tslint:disable-next-line:ban-types\n  constructor(platformId) {\n    registerVersion$1('angularfire', VERSION.full, 'core');\n    registerVersion$1('angularfire', VERSION.full, 'app');\n    registerVersion$1('angular', VERSION$1.full, platformId.toString());\n  }\n\n}\n\nFirebaseAppModule.ɵfac = function FirebaseAppModule_Factory(t) {\n  return new (t || FirebaseAppModule)(i0.ɵɵinject(PLATFORM_ID));\n};\n\nFirebaseAppModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: FirebaseAppModule\n});\nFirebaseAppModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [DEFAULT_FIREBASE_APP_PROVIDER, FIREBASE_APPS_PROVIDER]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FirebaseAppModule, [{\n    type: NgModule,\n    args: [{\n      providers: [DEFAULT_FIREBASE_APP_PROVIDER, FIREBASE_APPS_PROVIDER]\n    }]\n  }], function () {\n    return [{\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, null);\n})(); // Calling initializeApp({ ... }, 'name') multiple times will add more FirebaseApps into the FIREBASE_APPS\n// injection scope. This allows developers to more easily work with multiple Firebase Applications. Downside\n// is that DI for app name and options doesn't really make sense anymore.\n\n\nfunction provideFirebaseApp(fn, ...deps) {\n  return {\n    ngModule: FirebaseAppModule,\n    providers: [{\n      provide: PROVIDED_FIREBASE_APPS,\n      useFactory: firebaseAppFactory(fn),\n      multi: true,\n      deps: [NgZone, Injector, ɵAngularFireSchedulers, ...deps]\n    }]\n  };\n} // DO NOT MODIFY, this file is autogenerated by tools/build.ts\n\n\nconst deleteApp = ɵzoneWrap(deleteApp$1, true);\nconst getApp = ɵzoneWrap(getApp$1, true);\nconst getApps = ɵzoneWrap(getApps$1, true);\nconst initializeApp = ɵzoneWrap(initializeApp$1, true);\nconst onLog = ɵzoneWrap(onLog$1, true);\nconst registerVersion = ɵzoneWrap(registerVersion$1, true);\nconst setLogLevel = ɵzoneWrap(setLogLevel$1, true);\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FirebaseApp, FirebaseAppModule, FirebaseApps, deleteApp, firebaseApp$, getApp, getApps, initializeApp, onLog, provideFirebaseApp, registerVersion, setLogLevel };","map":{"version":3,"names":["getApps","getApps$1","getApp","getApp$1","registerVersion","registerVersion$1","deleteApp","deleteApp$1","initializeApp","initializeApp$1","onLog","onLog$1","setLogLevel","setLogLevel$1","timer","from","concatMap","distinct","i0","InjectionToken","Optional","VERSION","VERSION$1","PLATFORM_ID","NgModule","Inject","NgZone","Injector","ɵAngularFireSchedulers","ɵzoneWrap","FirebaseApp","constructor","app","FirebaseApps","firebaseApp$","pipe","defaultFirebaseAppFactory","provided","length","PROVIDED_FIREBASE_APPS","DEFAULT_FIREBASE_APP_PROVIDER","provide","useFactory","deps","FIREBASE_APPS_PROVIDER","firebaseAppFactory","fn","zone","injector","runOutsideAngular","FirebaseAppModule","platformId","full","toString","ɵfac","ɵmod","ɵinj","type","args","providers","Object","decorators","provideFirebaseApp","ngModule","multi"],"sources":["C:/Users/Felix/Desktop/lan.adeptinfo.ca/lan-adept/node_modules/@angular/fire/fesm2015/angular-fire-app.js"],"sourcesContent":["import { getApps as getApps$1, getApp as getApp$1, registerVersion as registerVersion$1, deleteApp as deleteApp$1, initializeApp as initializeApp$1, onLog as onLog$1, setLogLevel as setLogLevel$1 } from 'firebase/app';\nexport * from 'firebase/app';\nimport { timer, from } from 'rxjs';\nimport { concatMap, distinct } from 'rxjs/operators';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Optional, VERSION as VERSION$1, PLATFORM_ID, NgModule, Inject, NgZone, Injector } from '@angular/core';\nimport { VERSION, ɵAngularFireSchedulers, ɵzoneWrap } from '@angular/fire';\n\nclass FirebaseApp {\n    constructor(app) {\n        return app;\n    }\n}\nclass FirebaseApps {\n    constructor() {\n        return getApps$1();\n    }\n}\nconst firebaseApp$ = timer(0, 300).pipe(concatMap(() => from(getApps$1())), distinct());\n\nfunction defaultFirebaseAppFactory(provided) {\n    // Use the provided app, if there is only one, otherwise fetch the default app\n    if (provided && provided.length === 1) {\n        return provided[0];\n    }\n    return new FirebaseApp(getApp$1());\n}\n// With FIREBASE_APPS I wanted to capture the default app instance, if it is initialized by\n// the reserved URL; ɵPROVIDED_FIREBASE_APPS is not for public consumption and serves to ensure that all\n// provideFirebaseApp(...) calls are satisfied before FirebaseApp$ or FirebaseApp is resolved\nconst PROVIDED_FIREBASE_APPS = new InjectionToken('angularfire2._apps');\n// Injecting FirebaseApp will now only inject the default Firebase App\n// this allows allows beginners to import /__/firebase/init.js to auto initialize Firebase App\n// from the reserved URL.\nconst DEFAULT_FIREBASE_APP_PROVIDER = {\n    provide: FirebaseApp,\n    useFactory: defaultFirebaseAppFactory,\n    deps: [\n        [new Optional(), PROVIDED_FIREBASE_APPS],\n    ],\n};\nconst FIREBASE_APPS_PROVIDER = {\n    provide: FirebaseApps,\n    deps: [\n        [new Optional(), PROVIDED_FIREBASE_APPS],\n    ],\n};\nfunction firebaseAppFactory(fn) {\n    return (zone, injector) => {\n        const app = zone.runOutsideAngular(() => fn(injector));\n        return new FirebaseApp(app);\n    };\n}\nclass FirebaseAppModule {\n    // tslint:disable-next-line:ban-types\n    constructor(platformId) {\n        registerVersion$1('angularfire', VERSION.full, 'core');\n        registerVersion$1('angularfire', VERSION.full, 'app');\n        registerVersion$1('angular', VERSION$1.full, platformId.toString());\n    }\n}\nFirebaseAppModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: FirebaseAppModule, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.NgModule });\nFirebaseAppModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: FirebaseAppModule });\nFirebaseAppModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: FirebaseAppModule, providers: [\n        DEFAULT_FIREBASE_APP_PROVIDER,\n        FIREBASE_APPS_PROVIDER,\n    ] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: FirebaseAppModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [\n                        DEFAULT_FIREBASE_APP_PROVIDER,\n                        FIREBASE_APPS_PROVIDER,\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; } });\n// Calling initializeApp({ ... }, 'name') multiple times will add more FirebaseApps into the FIREBASE_APPS\n// injection scope. This allows developers to more easily work with multiple Firebase Applications. Downside\n// is that DI for app name and options doesn't really make sense anymore.\nfunction provideFirebaseApp(fn, ...deps) {\n    return {\n        ngModule: FirebaseAppModule,\n        providers: [{\n                provide: PROVIDED_FIREBASE_APPS,\n                useFactory: firebaseAppFactory(fn),\n                multi: true,\n                deps: [\n                    NgZone,\n                    Injector,\n                    ɵAngularFireSchedulers,\n                    ...deps,\n                ],\n            }],\n    };\n}\n\n// DO NOT MODIFY, this file is autogenerated by tools/build.ts\nconst deleteApp = ɵzoneWrap(deleteApp$1, true);\nconst getApp = ɵzoneWrap(getApp$1, true);\nconst getApps = ɵzoneWrap(getApps$1, true);\nconst initializeApp = ɵzoneWrap(initializeApp$1, true);\nconst onLog = ɵzoneWrap(onLog$1, true);\nconst registerVersion = ɵzoneWrap(registerVersion$1, true);\nconst setLogLevel = ɵzoneWrap(setLogLevel$1, true);\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FirebaseApp, FirebaseAppModule, FirebaseApps, deleteApp, firebaseApp$, getApp, getApps, initializeApp, onLog, provideFirebaseApp, registerVersion, setLogLevel };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}