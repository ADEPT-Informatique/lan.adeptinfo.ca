{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Felix/Desktop/lan.adeptinfo.ca/lan-adept/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport firebase from '@firebase/app-compat';\nimport * as exp from '@firebase/auth/internal';\nimport { Component } from '@firebase/component';\nimport { isBrowserExtension, isReactNative, isNode, getUA, isIE, isIndexedDBAvailable, FirebaseError } from '@firebase/util';\nvar name = \"@firebase/auth-compat\";\nvar version = \"0.2.18\";\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nconst CORDOVA_ONDEVICEREADY_TIMEOUT_MS = 1000;\n\nfunction _getCurrentScheme() {\n  var _a;\n\n  return ((_a = self === null || self === void 0 ? void 0 : self.location) === null || _a === void 0 ? void 0 : _a.protocol) || null;\n}\n/**\r\n * @return {boolean} Whether the current environment is http or https.\r\n */\n\n\nfunction _isHttpOrHttps() {\n  return _getCurrentScheme() === 'http:' || _getCurrentScheme() === 'https:';\n}\n/**\r\n * @param {?string=} ua The user agent.\r\n * @return {boolean} Whether the app is rendered in a mobile iOS or Android\r\n *     Cordova environment.\r\n */\n\n\nfunction _isAndroidOrIosCordovaScheme(ua = getUA()) {\n  return !!((_getCurrentScheme() === 'file:' || _getCurrentScheme() === 'ionic:' || _getCurrentScheme() === 'capacitor:') && ua.toLowerCase().match(/iphone|ipad|ipod|android/));\n}\n/**\r\n * @return {boolean} Whether the environment is a native environment, where\r\n *     CORS checks do not apply.\r\n */\n\n\nfunction _isNativeEnvironment() {\n  return isReactNative() || isNode();\n}\n/**\r\n * Checks whether the user agent is IE11.\r\n * @return {boolean} True if it is IE11.\r\n */\n\n\nfunction _isIe11() {\n  return isIE() && (document === null || document === void 0 ? void 0 : document.documentMode) === 11;\n}\n/**\r\n * Checks whether the user agent is Edge.\r\n * @param {string} userAgent The browser user agent string.\r\n * @return {boolean} True if it is Edge.\r\n */\n\n\nfunction _isEdge(ua = getUA()) {\n  return /Edge\\/\\d+/.test(ua);\n}\n/**\r\n * @param {?string=} opt_userAgent The navigator user agent.\r\n * @return {boolean} Whether local storage is not synchronized between an iframe\r\n *     and a popup of the same domain.\r\n */\n\n\nfunction _isLocalStorageNotSynchronized(ua = getUA()) {\n  return _isIe11() || _isEdge(ua);\n}\n/** @return {boolean} Whether web storage is supported. */\n\n\nfunction _isWebStorageSupported() {\n  try {\n    const storage = self.localStorage;\n\n    const key = exp._generateEventId();\n\n    if (storage) {\n      // setItem will throw an exception if we cannot access WebStorage (e.g.,\n      // Safari in private mode).\n      storage['setItem'](key, '1');\n      storage['removeItem'](key); // For browsers where iframe web storage does not synchronize with a popup\n      // of the same domain, indexedDB is used for persistent storage. These\n      // browsers include IE11 and Edge.\n      // Make sure it is supported (IE11 and Edge private mode does not support\n      // that).\n\n      if (_isLocalStorageNotSynchronized()) {\n        // In such browsers, if indexedDB is not supported, an iframe cannot be\n        // notified of the popup sign in result.\n        return isIndexedDBAvailable();\n      }\n\n      return true;\n    }\n  } catch (e) {\n    // localStorage is not available from a worker. Test availability of\n    // indexedDB.\n    return _isWorker() && isIndexedDBAvailable();\n  }\n\n  return false;\n}\n/**\r\n * @param {?Object=} global The optional global scope.\r\n * @return {boolean} Whether current environment is a worker.\r\n */\n\n\nfunction _isWorker() {\n  // WorkerGlobalScope only defined in worker environment.\n  return typeof global !== 'undefined' && 'WorkerGlobalScope' in global && 'importScripts' in global;\n}\n\nfunction _isPopupRedirectSupported() {\n  return (_isHttpOrHttps() || isBrowserExtension() || _isAndroidOrIosCordovaScheme()) && // React Native with remote debugging reports its location.protocol as\n  // http.\n  !_isNativeEnvironment() && // Local storage has to be supported for browser popup and redirect\n  // operations to work.\n  _isWebStorageSupported() && // DOM, popups and redirects are not supported within a worker.\n  !_isWorker();\n}\n/** Quick check that indicates the platform *may* be Cordova */\n\n\nfunction _isLikelyCordova() {\n  return _isAndroidOrIosCordovaScheme() && typeof document !== 'undefined';\n}\n\nfunction _isCordova() {\n  return _isCordova2.apply(this, arguments);\n}\n\nfunction _isCordova2() {\n  _isCordova2 = _asyncToGenerator(function* () {\n    if (!_isLikelyCordova()) {\n      return false;\n    }\n\n    return new Promise(resolve => {\n      const timeoutId = setTimeout(() => {\n        // We've waited long enough; the telltale Cordova event didn't happen\n        resolve(false);\n      }, CORDOVA_ONDEVICEREADY_TIMEOUT_MS);\n      document.addEventListener('deviceready', () => {\n        clearTimeout(timeoutId);\n        resolve(true);\n      });\n    });\n  });\n  return _isCordova2.apply(this, arguments);\n}\n\nfunction _getSelfWindow() {\n  return typeof window !== 'undefined' ? window : null;\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nconst Persistence = {\n  LOCAL: 'local',\n  NONE: 'none',\n  SESSION: 'session'\n};\nconst _assert$3 = exp._assert;\nconst PERSISTENCE_KEY = 'persistence';\n/**\r\n * Validates that an argument is a valid persistence value. If an invalid type\r\n * is specified, an error is thrown synchronously.\r\n */\n\nfunction _validatePersistenceArgument(auth, persistence) {\n  _assert$3(Object.values(Persistence).includes(persistence), auth, \"invalid-persistence-type\"\n  /* INVALID_PERSISTENCE */\n  ); // Validate if the specified type is supported in the current environment.\n\n\n  if (isReactNative()) {\n    // This is only supported in a browser.\n    _assert$3(persistence !== Persistence.SESSION, auth, \"unsupported-persistence-type\"\n    /* UNSUPPORTED_PERSISTENCE */\n    );\n\n    return;\n  }\n\n  if (isNode()) {\n    // Only none is supported in Node.js.\n    _assert$3(persistence === Persistence.NONE, auth, \"unsupported-persistence-type\"\n    /* UNSUPPORTED_PERSISTENCE */\n    );\n\n    return;\n  }\n\n  if (_isWorker()) {\n    // In a worker environment, either LOCAL or NONE are supported.\n    // If indexedDB not supported and LOCAL provided, throw an error\n    _assert$3(persistence === Persistence.NONE || persistence === Persistence.LOCAL && isIndexedDBAvailable(), auth, \"unsupported-persistence-type\"\n    /* UNSUPPORTED_PERSISTENCE */\n    );\n\n    return;\n  } // This is restricted by what the browser supports.\n\n\n  _assert$3(persistence === Persistence.NONE || _isWebStorageSupported(), auth, \"unsupported-persistence-type\"\n  /* UNSUPPORTED_PERSISTENCE */\n  );\n}\n\nfunction _savePersistenceForRedirect(_x) {\n  return _savePersistenceForRedirect2.apply(this, arguments);\n}\n\nfunction _savePersistenceForRedirect2() {\n  _savePersistenceForRedirect2 = _asyncToGenerator(function* (auth) {\n    yield auth._initializationPromise;\n    const session = getSessionStorageIfAvailable();\n\n    const key = exp._persistenceKeyName(PERSISTENCE_KEY, auth.config.apiKey, auth.name);\n\n    if (session) {\n      session.setItem(key, auth._getPersistence());\n    }\n  });\n  return _savePersistenceForRedirect2.apply(this, arguments);\n}\n\nfunction _getPersistencesFromRedirect(apiKey, appName) {\n  const session = getSessionStorageIfAvailable();\n\n  if (!session) {\n    return [];\n  }\n\n  const key = exp._persistenceKeyName(PERSISTENCE_KEY, apiKey, appName);\n\n  const persistence = session.getItem(key);\n\n  switch (persistence) {\n    case Persistence.NONE:\n      return [exp.inMemoryPersistence];\n\n    case Persistence.LOCAL:\n      return [exp.indexedDBLocalPersistence, exp.browserSessionPersistence];\n\n    case Persistence.SESSION:\n      return [exp.browserSessionPersistence];\n\n    default:\n      return [];\n  }\n}\n/** Returns session storage, or null if the property access errors */\n\n\nfunction getSessionStorageIfAvailable() {\n  var _a;\n\n  try {\n    return ((_a = _getSelfWindow()) === null || _a === void 0 ? void 0 : _a.sessionStorage) || null;\n  } catch (e) {\n    return null;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nconst _assert$2 = exp._assert;\n/** Platform-agnostic popup-redirect resolver */\n\nclass CompatPopupRedirectResolver {\n  constructor() {\n    // Create both resolvers for dynamic resolution later\n    this.browserResolver = exp._getInstance(exp.browserPopupRedirectResolver);\n    this.cordovaResolver = exp._getInstance(exp.cordovaPopupRedirectResolver); // The actual resolver in use: either browserResolver or cordovaResolver.\n\n    this.underlyingResolver = null;\n    this._redirectPersistence = exp.browserSessionPersistence;\n    this._completeRedirectFn = exp._getRedirectResult;\n    this._overrideRedirectResult = exp._overrideRedirectResult;\n  }\n\n  _initialize(auth) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this.selectUnderlyingResolver();\n      return _this.assertedUnderlyingResolver._initialize(auth);\n    })();\n  }\n\n  _openPopup(auth, provider, authType, eventId) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this2.selectUnderlyingResolver();\n      return _this2.assertedUnderlyingResolver._openPopup(auth, provider, authType, eventId);\n    })();\n  }\n\n  _openRedirect(auth, provider, authType, eventId) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this3.selectUnderlyingResolver();\n      return _this3.assertedUnderlyingResolver._openRedirect(auth, provider, authType, eventId);\n    })();\n  }\n\n  _isIframeWebStorageSupported(auth, cb) {\n    this.assertedUnderlyingResolver._isIframeWebStorageSupported(auth, cb);\n  }\n\n  _originValidation(auth) {\n    return this.assertedUnderlyingResolver._originValidation(auth);\n  }\n\n  get _shouldInitProactively() {\n    return _isLikelyCordova() || this.browserResolver._shouldInitProactively;\n  }\n\n  get assertedUnderlyingResolver() {\n    _assert$2(this.underlyingResolver, \"internal-error\"\n    /* INTERNAL_ERROR */\n    );\n\n    return this.underlyingResolver;\n  }\n\n  selectUnderlyingResolver() {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this4.underlyingResolver) {\n        return;\n      } // We haven't yet determined whether or not we're in Cordova; go ahead\n      // and determine that state now.\n\n\n      const isCordova = yield _isCordova();\n      _this4.underlyingResolver = isCordova ? _this4.cordovaResolver : _this4.browserResolver;\n    })();\n  }\n\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction unwrap(object) {\n  return object.unwrap();\n}\n\nfunction wrapped(object) {\n  return object.wrapped();\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction credentialFromResponse(userCredential) {\n  return credentialFromObject(userCredential);\n}\n\nfunction attachExtraErrorFields(auth, e) {\n  var _a, _b; // The response contains all fields from the server which may or may not\n  // actually match the underlying type\n\n\n  const response = (_a = e.customData) === null || _a === void 0 ? void 0 : _a._tokenResponse;\n\n  if (((_b = e) === null || _b === void 0 ? void 0 : _b.code) === 'auth/multi-factor-auth-required') {\n    const mfaErr = e;\n    mfaErr.resolver = new MultiFactorResolver(auth, exp.getMultiFactorResolver(auth, e));\n  } else if (response) {\n    const credential = credentialFromObject(e);\n    const credErr = e;\n\n    if (credential) {\n      credErr.credential = credential;\n      credErr.tenantId = response.tenantId || undefined;\n      credErr.email = response.email || undefined;\n      credErr.phoneNumber = response.phoneNumber || undefined;\n    }\n  }\n}\n\nfunction credentialFromObject(object) {\n  const {\n    _tokenResponse\n  } = object instanceof FirebaseError ? object.customData : object;\n\n  if (!_tokenResponse) {\n    return null;\n  } // Handle phone Auth credential responses, as they have a different format\n  // from other backend responses (i.e. no providerId). This is also only the\n  // case for user credentials (does not work for errors).\n\n\n  if (!(object instanceof FirebaseError)) {\n    if ('temporaryProof' in _tokenResponse && 'phoneNumber' in _tokenResponse) {\n      return exp.PhoneAuthProvider.credentialFromResult(object);\n    }\n  }\n\n  const providerId = _tokenResponse.providerId; // Email and password is not supported as there is no situation where the\n  // server would return the password to the client.\n\n  if (!providerId || providerId === exp.ProviderId.PASSWORD) {\n    return null;\n  }\n\n  let provider;\n\n  switch (providerId) {\n    case exp.ProviderId.GOOGLE:\n      provider = exp.GoogleAuthProvider;\n      break;\n\n    case exp.ProviderId.FACEBOOK:\n      provider = exp.FacebookAuthProvider;\n      break;\n\n    case exp.ProviderId.GITHUB:\n      provider = exp.GithubAuthProvider;\n      break;\n\n    case exp.ProviderId.TWITTER:\n      provider = exp.TwitterAuthProvider;\n      break;\n\n    default:\n      const {\n        oauthIdToken,\n        oauthAccessToken,\n        oauthTokenSecret,\n        pendingToken,\n        nonce\n      } = _tokenResponse;\n\n      if (!oauthAccessToken && !oauthTokenSecret && !oauthIdToken && !pendingToken) {\n        return null;\n      } // TODO(avolkovi): uncomment this and get it working with SAML & OIDC\n\n\n      if (pendingToken) {\n        if (providerId.startsWith('saml.')) {\n          return exp.SAMLAuthCredential._create(providerId, pendingToken);\n        } else {\n          // OIDC and non-default providers excluding Twitter.\n          return exp.OAuthCredential._fromParams({\n            providerId,\n            signInMethod: providerId,\n            pendingToken,\n            idToken: oauthIdToken,\n            accessToken: oauthAccessToken\n          });\n        }\n      }\n\n      return new exp.OAuthProvider(providerId).credential({\n        idToken: oauthIdToken,\n        accessToken: oauthAccessToken,\n        rawNonce: nonce\n      });\n  }\n\n  return object instanceof FirebaseError ? provider.credentialFromError(object) : provider.credentialFromResult(object);\n}\n\nfunction convertCredential(auth, credentialPromise) {\n  return credentialPromise.catch(e => {\n    if (e instanceof FirebaseError) {\n      attachExtraErrorFields(auth, e);\n    }\n\n    throw e;\n  }).then(credential => {\n    const operationType = credential.operationType;\n    const user = credential.user;\n    return {\n      operationType,\n      credential: credentialFromResponse(credential),\n      additionalUserInfo: exp.getAdditionalUserInfo(credential),\n      user: User.getOrCreate(user)\n    };\n  });\n}\n\nfunction convertConfirmationResult(_x2, _x3) {\n  return _convertConfirmationResult.apply(this, arguments);\n}\n\nfunction _convertConfirmationResult() {\n  _convertConfirmationResult = _asyncToGenerator(function* (auth, confirmationResultPromise) {\n    const confirmationResultExp = yield confirmationResultPromise;\n    return {\n      verificationId: confirmationResultExp.verificationId,\n      confirm: verificationCode => convertCredential(auth, confirmationResultExp.confirm(verificationCode))\n    };\n  });\n  return _convertConfirmationResult.apply(this, arguments);\n}\n\nclass MultiFactorResolver {\n  constructor(auth, resolver) {\n    this.resolver = resolver;\n    this.auth = wrapped(auth);\n  }\n\n  get session() {\n    return this.resolver.session;\n  }\n\n  get hints() {\n    return this.resolver.hints;\n  }\n\n  resolveSignIn(assertion) {\n    return convertCredential(unwrap(this.auth), this.resolver.resolveSignIn(assertion));\n  }\n\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nclass User {\n  constructor(_delegate) {\n    this._delegate = _delegate;\n    this.multiFactor = exp.multiFactor(_delegate);\n  }\n\n  static getOrCreate(user) {\n    if (!User.USER_MAP.has(user)) {\n      User.USER_MAP.set(user, new User(user));\n    }\n\n    return User.USER_MAP.get(user);\n  }\n\n  delete() {\n    return this._delegate.delete();\n  }\n\n  reload() {\n    return this._delegate.reload();\n  }\n\n  toJSON() {\n    return this._delegate.toJSON();\n  }\n\n  getIdTokenResult(forceRefresh) {\n    return this._delegate.getIdTokenResult(forceRefresh);\n  }\n\n  getIdToken(forceRefresh) {\n    return this._delegate.getIdToken(forceRefresh);\n  }\n\n  linkAndRetrieveDataWithCredential(credential) {\n    return this.linkWithCredential(credential);\n  }\n\n  linkWithCredential(credential) {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      return convertCredential(_this5.auth, exp.linkWithCredential(_this5._delegate, credential));\n    })();\n  }\n\n  linkWithPhoneNumber(phoneNumber, applicationVerifier) {\n    var _this6 = this;\n\n    return _asyncToGenerator(function* () {\n      return convertConfirmationResult(_this6.auth, exp.linkWithPhoneNumber(_this6._delegate, phoneNumber, applicationVerifier));\n    })();\n  }\n\n  linkWithPopup(provider) {\n    var _this7 = this;\n\n    return _asyncToGenerator(function* () {\n      return convertCredential(_this7.auth, exp.linkWithPopup(_this7._delegate, provider, CompatPopupRedirectResolver));\n    })();\n  }\n\n  linkWithRedirect(provider) {\n    var _this8 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _savePersistenceForRedirect(exp._castAuth(_this8.auth));\n      return exp.linkWithRedirect(_this8._delegate, provider, CompatPopupRedirectResolver);\n    })();\n  }\n\n  reauthenticateAndRetrieveDataWithCredential(credential) {\n    return this.reauthenticateWithCredential(credential);\n  }\n\n  reauthenticateWithCredential(credential) {\n    var _this9 = this;\n\n    return _asyncToGenerator(function* () {\n      return convertCredential(_this9.auth, exp.reauthenticateWithCredential(_this9._delegate, credential));\n    })();\n  }\n\n  reauthenticateWithPhoneNumber(phoneNumber, applicationVerifier) {\n    return convertConfirmationResult(this.auth, exp.reauthenticateWithPhoneNumber(this._delegate, phoneNumber, applicationVerifier));\n  }\n\n  reauthenticateWithPopup(provider) {\n    return convertCredential(this.auth, exp.reauthenticateWithPopup(this._delegate, provider, CompatPopupRedirectResolver));\n  }\n\n  reauthenticateWithRedirect(provider) {\n    var _this10 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _savePersistenceForRedirect(exp._castAuth(_this10.auth));\n      return exp.reauthenticateWithRedirect(_this10._delegate, provider, CompatPopupRedirectResolver);\n    })();\n  }\n\n  sendEmailVerification(actionCodeSettings) {\n    return exp.sendEmailVerification(this._delegate, actionCodeSettings);\n  }\n\n  unlink(providerId) {\n    var _this11 = this;\n\n    return _asyncToGenerator(function* () {\n      yield exp.unlink(_this11._delegate, providerId);\n      return _this11;\n    })();\n  }\n\n  updateEmail(newEmail) {\n    return exp.updateEmail(this._delegate, newEmail);\n  }\n\n  updatePassword(newPassword) {\n    return exp.updatePassword(this._delegate, newPassword);\n  }\n\n  updatePhoneNumber(phoneCredential) {\n    return exp.updatePhoneNumber(this._delegate, phoneCredential);\n  }\n\n  updateProfile(profile) {\n    return exp.updateProfile(this._delegate, profile);\n  }\n\n  verifyBeforeUpdateEmail(newEmail, actionCodeSettings) {\n    return exp.verifyBeforeUpdateEmail(this._delegate, newEmail, actionCodeSettings);\n  }\n\n  get emailVerified() {\n    return this._delegate.emailVerified;\n  }\n\n  get isAnonymous() {\n    return this._delegate.isAnonymous;\n  }\n\n  get metadata() {\n    return this._delegate.metadata;\n  }\n\n  get phoneNumber() {\n    return this._delegate.phoneNumber;\n  }\n\n  get providerData() {\n    return this._delegate.providerData;\n  }\n\n  get refreshToken() {\n    return this._delegate.refreshToken;\n  }\n\n  get tenantId() {\n    return this._delegate.tenantId;\n  }\n\n  get displayName() {\n    return this._delegate.displayName;\n  }\n\n  get email() {\n    return this._delegate.email;\n  }\n\n  get photoURL() {\n    return this._delegate.photoURL;\n  }\n\n  get providerId() {\n    return this._delegate.providerId;\n  }\n\n  get uid() {\n    return this._delegate.uid;\n  }\n\n  get auth() {\n    return this._delegate.auth;\n  }\n\n} // Maintain a map so that there's always a 1:1 mapping between new User and\n// legacy compat users\n\n\nUser.USER_MAP = new WeakMap();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nconst _assert$1 = exp._assert;\n\nclass Auth {\n  constructor(app, provider) {\n    this.app = app;\n\n    if (provider.isInitialized()) {\n      this._delegate = provider.getImmediate();\n      this.linkUnderlyingAuth();\n      return;\n    }\n\n    const {\n      apiKey\n    } = app.options; // TODO: platform needs to be determined using heuristics\n\n    _assert$1(apiKey, \"invalid-api-key\"\n    /* INVALID_API_KEY */\n    , {\n      appName: app.name\n    }); // TODO: platform needs to be determined using heuristics\n\n\n    _assert$1(apiKey, \"invalid-api-key\"\n    /* INVALID_API_KEY */\n    , {\n      appName: app.name\n    }); // Only use a popup/redirect resolver in browser environments\n\n\n    const resolver = typeof window !== 'undefined' ? CompatPopupRedirectResolver : undefined;\n    this._delegate = provider.initialize({\n      options: {\n        persistence: buildPersistenceHierarchy(apiKey, app.name),\n        popupRedirectResolver: resolver\n      }\n    });\n\n    this._delegate._updateErrorMap(exp.debugErrorMap);\n\n    this.linkUnderlyingAuth();\n  }\n\n  get emulatorConfig() {\n    return this._delegate.emulatorConfig;\n  }\n\n  get currentUser() {\n    if (!this._delegate.currentUser) {\n      return null;\n    }\n\n    return User.getOrCreate(this._delegate.currentUser);\n  }\n\n  get languageCode() {\n    return this._delegate.languageCode;\n  }\n\n  set languageCode(languageCode) {\n    this._delegate.languageCode = languageCode;\n  }\n\n  get settings() {\n    return this._delegate.settings;\n  }\n\n  get tenantId() {\n    return this._delegate.tenantId;\n  }\n\n  set tenantId(tid) {\n    this._delegate.tenantId = tid;\n  }\n\n  useDeviceLanguage() {\n    this._delegate.useDeviceLanguage();\n  }\n\n  signOut() {\n    return this._delegate.signOut();\n  }\n\n  useEmulator(url, options) {\n    exp.connectAuthEmulator(this._delegate, url, options);\n  }\n\n  applyActionCode(code) {\n    return exp.applyActionCode(this._delegate, code);\n  }\n\n  checkActionCode(code) {\n    return exp.checkActionCode(this._delegate, code);\n  }\n\n  confirmPasswordReset(code, newPassword) {\n    return exp.confirmPasswordReset(this._delegate, code, newPassword);\n  }\n\n  createUserWithEmailAndPassword(email, password) {\n    var _this12 = this;\n\n    return _asyncToGenerator(function* () {\n      return convertCredential(_this12._delegate, exp.createUserWithEmailAndPassword(_this12._delegate, email, password));\n    })();\n  }\n\n  fetchProvidersForEmail(email) {\n    return this.fetchSignInMethodsForEmail(email);\n  }\n\n  fetchSignInMethodsForEmail(email) {\n    return exp.fetchSignInMethodsForEmail(this._delegate, email);\n  }\n\n  isSignInWithEmailLink(emailLink) {\n    return exp.isSignInWithEmailLink(this._delegate, emailLink);\n  }\n\n  getRedirectResult() {\n    var _this13 = this;\n\n    return _asyncToGenerator(function* () {\n      _assert$1(_isPopupRedirectSupported(), _this13._delegate, \"operation-not-supported-in-this-environment\"\n      /* OPERATION_NOT_SUPPORTED */\n      );\n\n      const credential = yield exp.getRedirectResult(_this13._delegate, CompatPopupRedirectResolver);\n\n      if (!credential) {\n        return {\n          credential: null,\n          user: null\n        };\n      }\n\n      return convertCredential(_this13._delegate, Promise.resolve(credential));\n    })();\n  } // This function should only be called by frameworks (e.g. FirebaseUI-web) to log their usage.\n  // It is not intended for direct use by developer apps. NO jsdoc here to intentionally leave it\n  // out of autogenerated documentation pages to reduce accidental misuse.\n\n\n  addFrameworkForLogging(framework) {\n    exp.addFrameworkForLogging(this._delegate, framework);\n  }\n\n  onAuthStateChanged(nextOrObserver, errorFn, completed) {\n    const {\n      next,\n      error,\n      complete\n    } = wrapObservers(nextOrObserver, errorFn, completed);\n    return this._delegate.onAuthStateChanged(next, error, complete);\n  }\n\n  onIdTokenChanged(nextOrObserver, errorFn, completed) {\n    const {\n      next,\n      error,\n      complete\n    } = wrapObservers(nextOrObserver, errorFn, completed);\n    return this._delegate.onIdTokenChanged(next, error, complete);\n  }\n\n  sendSignInLinkToEmail(email, actionCodeSettings) {\n    return exp.sendSignInLinkToEmail(this._delegate, email, actionCodeSettings);\n  }\n\n  sendPasswordResetEmail(email, actionCodeSettings) {\n    return exp.sendPasswordResetEmail(this._delegate, email, actionCodeSettings || undefined);\n  }\n\n  setPersistence(persistence) {\n    var _this14 = this;\n\n    return _asyncToGenerator(function* () {\n      _validatePersistenceArgument(_this14._delegate, persistence);\n\n      let converted;\n\n      switch (persistence) {\n        case Persistence.SESSION:\n          converted = exp.browserSessionPersistence;\n          break;\n\n        case Persistence.LOCAL:\n          // Not using isIndexedDBAvailable() since it only checks if indexedDB is defined.\n          const isIndexedDBFullySupported = yield exp._getInstance(exp.indexedDBLocalPersistence)._isAvailable();\n          converted = isIndexedDBFullySupported ? exp.indexedDBLocalPersistence : exp.browserLocalPersistence;\n          break;\n\n        case Persistence.NONE:\n          converted = exp.inMemoryPersistence;\n          break;\n\n        default:\n          return exp._fail(\"argument-error\"\n          /* ARGUMENT_ERROR */\n          , {\n            appName: _this14._delegate.name\n          });\n      }\n\n      return _this14._delegate.setPersistence(converted);\n    })();\n  }\n\n  signInAndRetrieveDataWithCredential(credential) {\n    return this.signInWithCredential(credential);\n  }\n\n  signInAnonymously() {\n    return convertCredential(this._delegate, exp.signInAnonymously(this._delegate));\n  }\n\n  signInWithCredential(credential) {\n    return convertCredential(this._delegate, exp.signInWithCredential(this._delegate, credential));\n  }\n\n  signInWithCustomToken(token) {\n    return convertCredential(this._delegate, exp.signInWithCustomToken(this._delegate, token));\n  }\n\n  signInWithEmailAndPassword(email, password) {\n    return convertCredential(this._delegate, exp.signInWithEmailAndPassword(this._delegate, email, password));\n  }\n\n  signInWithEmailLink(email, emailLink) {\n    return convertCredential(this._delegate, exp.signInWithEmailLink(this._delegate, email, emailLink));\n  }\n\n  signInWithPhoneNumber(phoneNumber, applicationVerifier) {\n    return convertConfirmationResult(this._delegate, exp.signInWithPhoneNumber(this._delegate, phoneNumber, applicationVerifier));\n  }\n\n  signInWithPopup(provider) {\n    var _this15 = this;\n\n    return _asyncToGenerator(function* () {\n      _assert$1(_isPopupRedirectSupported(), _this15._delegate, \"operation-not-supported-in-this-environment\"\n      /* OPERATION_NOT_SUPPORTED */\n      );\n\n      return convertCredential(_this15._delegate, exp.signInWithPopup(_this15._delegate, provider, CompatPopupRedirectResolver));\n    })();\n  }\n\n  signInWithRedirect(provider) {\n    var _this16 = this;\n\n    return _asyncToGenerator(function* () {\n      _assert$1(_isPopupRedirectSupported(), _this16._delegate, \"operation-not-supported-in-this-environment\"\n      /* OPERATION_NOT_SUPPORTED */\n      );\n\n      yield _savePersistenceForRedirect(_this16._delegate);\n      return exp.signInWithRedirect(_this16._delegate, provider, CompatPopupRedirectResolver);\n    })();\n  }\n\n  updateCurrentUser(user) {\n    // remove ts-ignore once overloads are defined for exp functions to accept compat objects\n    // @ts-ignore\n    return this._delegate.updateCurrentUser(user);\n  }\n\n  verifyPasswordResetCode(code) {\n    return exp.verifyPasswordResetCode(this._delegate, code);\n  }\n\n  unwrap() {\n    return this._delegate;\n  }\n\n  _delete() {\n    return this._delegate._delete();\n  }\n\n  linkUnderlyingAuth() {\n    this._delegate.wrapped = () => this;\n  }\n\n}\n\nAuth.Persistence = Persistence;\n\nfunction wrapObservers(nextOrObserver, error, complete) {\n  let next = nextOrObserver;\n\n  if (typeof nextOrObserver !== 'function') {\n    ({\n      next,\n      error,\n      complete\n    } = nextOrObserver);\n  } // We know 'next' is now a function\n\n\n  const oldNext = next;\n\n  const newNext = user => oldNext(user && User.getOrCreate(user));\n\n  return {\n    next: newNext,\n    error: error,\n    complete\n  };\n}\n\nfunction buildPersistenceHierarchy(apiKey, appName) {\n  // Note this is slightly different behavior: in this case, the stored\n  // persistence is checked *first* rather than last. This is because we want\n  // to prefer stored persistence type in the hierarchy. This is an empty\n  // array if window is not available or there is no pending redirect\n  const persistences = _getPersistencesFromRedirect(apiKey, appName); // If \"self\" is available, add indexedDB\n\n\n  if (typeof self !== 'undefined' && !persistences.includes(exp.indexedDBLocalPersistence)) {\n    persistences.push(exp.indexedDBLocalPersistence);\n  } // If \"window\" is available, add HTML Storage persistences\n\n\n  if (typeof window !== 'undefined') {\n    for (const persistence of [exp.browserLocalPersistence, exp.browserSessionPersistence]) {\n      if (!persistences.includes(persistence)) {\n        persistences.push(persistence);\n      }\n    }\n  } // Add in-memory as a final fallback\n\n\n  if (!persistences.includes(exp.inMemoryPersistence)) {\n    persistences.push(exp.inMemoryPersistence);\n  }\n\n  return persistences;\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nclass PhoneAuthProvider {\n  constructor() {\n    this.providerId = 'phone'; // TODO: remove ts-ignore when moving types from auth-types to auth-compat\n    // @ts-ignore\n\n    this._delegate = new exp.PhoneAuthProvider(unwrap(firebase.auth()));\n  }\n\n  static credential(verificationId, verificationCode) {\n    return exp.PhoneAuthProvider.credential(verificationId, verificationCode);\n  }\n\n  verifyPhoneNumber(phoneInfoOptions, applicationVerifier) {\n    return this._delegate.verifyPhoneNumber( // The implementation matches but the types are subtly incompatible\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    phoneInfoOptions, applicationVerifier);\n  }\n\n  unwrap() {\n    return this._delegate;\n  }\n\n}\n\nPhoneAuthProvider.PHONE_SIGN_IN_METHOD = exp.PhoneAuthProvider.PHONE_SIGN_IN_METHOD;\nPhoneAuthProvider.PROVIDER_ID = exp.PhoneAuthProvider.PROVIDER_ID;\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nconst _assert = exp._assert;\n\nclass RecaptchaVerifier {\n  constructor(container, parameters, app = firebase.app()) {\n    var _a; // API key is required for web client RPC calls.\n\n\n    _assert((_a = app.options) === null || _a === void 0 ? void 0 : _a.apiKey, \"invalid-api-key\"\n    /* INVALID_API_KEY */\n    , {\n      appName: app.name\n    });\n\n    this._delegate = new exp.RecaptchaVerifier(container, // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    parameters, // TODO: remove ts-ignore when moving types from auth-types to auth-compat\n    // @ts-ignore\n    app.auth());\n    this.type = this._delegate.type;\n  }\n\n  clear() {\n    this._delegate.clear();\n  }\n\n  render() {\n    return this._delegate.render();\n  }\n\n  verify() {\n    return this._delegate.verify();\n  }\n\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nconst AUTH_TYPE = 'auth-compat'; // Create auth components to register with firebase.\n// Provides Auth public APIs.\n\nfunction registerAuthCompat(instance) {\n  instance.INTERNAL.registerComponent(new Component(AUTH_TYPE, container => {\n    // getImmediate for FirebaseApp will always succeed\n    const app = container.getProvider('app-compat').getImmediate();\n    const authProvider = container.getProvider('auth');\n    return new Auth(app, authProvider);\n  }, \"PUBLIC\"\n  /* PUBLIC */\n  ).setServiceProps({\n    ActionCodeInfo: {\n      Operation: {\n        EMAIL_SIGNIN: exp.ActionCodeOperation.EMAIL_SIGNIN,\n        PASSWORD_RESET: exp.ActionCodeOperation.PASSWORD_RESET,\n        RECOVER_EMAIL: exp.ActionCodeOperation.RECOVER_EMAIL,\n        REVERT_SECOND_FACTOR_ADDITION: exp.ActionCodeOperation.REVERT_SECOND_FACTOR_ADDITION,\n        VERIFY_AND_CHANGE_EMAIL: exp.ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL,\n        VERIFY_EMAIL: exp.ActionCodeOperation.VERIFY_EMAIL\n      }\n    },\n    EmailAuthProvider: exp.EmailAuthProvider,\n    FacebookAuthProvider: exp.FacebookAuthProvider,\n    GithubAuthProvider: exp.GithubAuthProvider,\n    GoogleAuthProvider: exp.GoogleAuthProvider,\n    OAuthProvider: exp.OAuthProvider,\n    SAMLAuthProvider: exp.SAMLAuthProvider,\n    PhoneAuthProvider: PhoneAuthProvider,\n    PhoneMultiFactorGenerator: exp.PhoneMultiFactorGenerator,\n    RecaptchaVerifier: RecaptchaVerifier,\n    TwitterAuthProvider: exp.TwitterAuthProvider,\n    Auth,\n    AuthCredential: exp.AuthCredential,\n    Error: FirebaseError\n  }).setInstantiationMode(\"LAZY\"\n  /* LAZY */\n  ).setMultipleInstances(false));\n  instance.registerVersion(name, version);\n}\n\nregisterAuthCompat(firebase);","map":{"version":3,"names":["firebase","exp","Component","isBrowserExtension","isReactNative","isNode","getUA","isIE","isIndexedDBAvailable","FirebaseError","name","version","CORDOVA_ONDEVICEREADY_TIMEOUT_MS","_getCurrentScheme","_a","self","location","protocol","_isHttpOrHttps","_isAndroidOrIosCordovaScheme","ua","toLowerCase","match","_isNativeEnvironment","_isIe11","document","documentMode","_isEdge","test","_isLocalStorageNotSynchronized","_isWebStorageSupported","storage","localStorage","key","_generateEventId","e","_isWorker","global","_isPopupRedirectSupported","_isLikelyCordova","_isCordova","Promise","resolve","timeoutId","setTimeout","addEventListener","clearTimeout","_getSelfWindow","window","Persistence","LOCAL","NONE","SESSION","_assert$3","_assert","PERSISTENCE_KEY","_validatePersistenceArgument","auth","persistence","Object","values","includes","_savePersistenceForRedirect","_initializationPromise","session","getSessionStorageIfAvailable","_persistenceKeyName","config","apiKey","setItem","_getPersistence","_getPersistencesFromRedirect","appName","getItem","inMemoryPersistence","indexedDBLocalPersistence","browserSessionPersistence","sessionStorage","_assert$2","CompatPopupRedirectResolver","constructor","browserResolver","_getInstance","browserPopupRedirectResolver","cordovaResolver","cordovaPopupRedirectResolver","underlyingResolver","_redirectPersistence","_completeRedirectFn","_getRedirectResult","_overrideRedirectResult","_initialize","selectUnderlyingResolver","assertedUnderlyingResolver","_openPopup","provider","authType","eventId","_openRedirect","_isIframeWebStorageSupported","cb","_originValidation","_shouldInitProactively","isCordova","unwrap","object","wrapped","credentialFromResponse","userCredential","credentialFromObject","attachExtraErrorFields","_b","response","customData","_tokenResponse","code","mfaErr","resolver","MultiFactorResolver","getMultiFactorResolver","credential","credErr","tenantId","undefined","email","phoneNumber","PhoneAuthProvider","credentialFromResult","providerId","ProviderId","PASSWORD","GOOGLE","GoogleAuthProvider","FACEBOOK","FacebookAuthProvider","GITHUB","GithubAuthProvider","TWITTER","TwitterAuthProvider","oauthIdToken","oauthAccessToken","oauthTokenSecret","pendingToken","nonce","startsWith","SAMLAuthCredential","_create","OAuthCredential","_fromParams","signInMethod","idToken","accessToken","OAuthProvider","rawNonce","credentialFromError","convertCredential","credentialPromise","catch","then","operationType","user","additionalUserInfo","getAdditionalUserInfo","User","getOrCreate","convertConfirmationResult","confirmationResultPromise","confirmationResultExp","verificationId","confirm","verificationCode","hints","resolveSignIn","assertion","_delegate","multiFactor","USER_MAP","has","set","get","delete","reload","toJSON","getIdTokenResult","forceRefresh","getIdToken","linkAndRetrieveDataWithCredential","linkWithCredential","linkWithPhoneNumber","applicationVerifier","linkWithPopup","linkWithRedirect","_castAuth","reauthenticateAndRetrieveDataWithCredential","reauthenticateWithCredential","reauthenticateWithPhoneNumber","reauthenticateWithPopup","reauthenticateWithRedirect","sendEmailVerification","actionCodeSettings","unlink","updateEmail","newEmail","updatePassword","newPassword","updatePhoneNumber","phoneCredential","updateProfile","profile","verifyBeforeUpdateEmail","emailVerified","isAnonymous","metadata","providerData","refreshToken","displayName","photoURL","uid","WeakMap","_assert$1","Auth","app","isInitialized","getImmediate","linkUnderlyingAuth","options","initialize","buildPersistenceHierarchy","popupRedirectResolver","_updateErrorMap","debugErrorMap","emulatorConfig","currentUser","languageCode","settings","tid","useDeviceLanguage","signOut","useEmulator","url","connectAuthEmulator","applyActionCode","checkActionCode","confirmPasswordReset","createUserWithEmailAndPassword","password","fetchProvidersForEmail","fetchSignInMethodsForEmail","isSignInWithEmailLink","emailLink","getRedirectResult","addFrameworkForLogging","framework","onAuthStateChanged","nextOrObserver","errorFn","completed","next","error","complete","wrapObservers","onIdTokenChanged","sendSignInLinkToEmail","sendPasswordResetEmail","setPersistence","converted","isIndexedDBFullySupported","_isAvailable","browserLocalPersistence","_fail","signInAndRetrieveDataWithCredential","signInWithCredential","signInAnonymously","signInWithCustomToken","token","signInWithEmailAndPassword","signInWithEmailLink","signInWithPhoneNumber","signInWithPopup","signInWithRedirect","updateCurrentUser","verifyPasswordResetCode","_delete","oldNext","newNext","persistences","push","verifyPhoneNumber","phoneInfoOptions","PHONE_SIGN_IN_METHOD","PROVIDER_ID","RecaptchaVerifier","container","parameters","type","clear","render","verify","AUTH_TYPE","registerAuthCompat","instance","INTERNAL","registerComponent","getProvider","authProvider","setServiceProps","ActionCodeInfo","Operation","EMAIL_SIGNIN","ActionCodeOperation","PASSWORD_RESET","RECOVER_EMAIL","REVERT_SECOND_FACTOR_ADDITION","VERIFY_AND_CHANGE_EMAIL","VERIFY_EMAIL","EmailAuthProvider","SAMLAuthProvider","PhoneMultiFactorGenerator","AuthCredential","Error","setInstantiationMode","setMultipleInstances","registerVersion"],"sources":["C:/Users/Felix/Desktop/lan.adeptinfo.ca/lan-adept/node_modules/@firebase/auth-compat/dist/index.esm2017.js"],"sourcesContent":["import firebase from '@firebase/app-compat';\nimport * as exp from '@firebase/auth/internal';\nimport { Component } from '@firebase/component';\nimport { isBrowserExtension, isReactNative, isNode, getUA, isIE, isIndexedDBAvailable, FirebaseError } from '@firebase/util';\n\nvar name = \"@firebase/auth-compat\";\nvar version = \"0.2.18\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst CORDOVA_ONDEVICEREADY_TIMEOUT_MS = 1000;\r\nfunction _getCurrentScheme() {\r\n    var _a;\r\n    return ((_a = self === null || self === void 0 ? void 0 : self.location) === null || _a === void 0 ? void 0 : _a.protocol) || null;\r\n}\r\n/**\r\n * @return {boolean} Whether the current environment is http or https.\r\n */\r\nfunction _isHttpOrHttps() {\r\n    return _getCurrentScheme() === 'http:' || _getCurrentScheme() === 'https:';\r\n}\r\n/**\r\n * @param {?string=} ua The user agent.\r\n * @return {boolean} Whether the app is rendered in a mobile iOS or Android\r\n *     Cordova environment.\r\n */\r\nfunction _isAndroidOrIosCordovaScheme(ua = getUA()) {\r\n    return !!((_getCurrentScheme() === 'file:' ||\r\n        _getCurrentScheme() === 'ionic:' ||\r\n        _getCurrentScheme() === 'capacitor:') &&\r\n        ua.toLowerCase().match(/iphone|ipad|ipod|android/));\r\n}\r\n/**\r\n * @return {boolean} Whether the environment is a native environment, where\r\n *     CORS checks do not apply.\r\n */\r\nfunction _isNativeEnvironment() {\r\n    return isReactNative() || isNode();\r\n}\r\n/**\r\n * Checks whether the user agent is IE11.\r\n * @return {boolean} True if it is IE11.\r\n */\r\nfunction _isIe11() {\r\n    return isIE() && (document === null || document === void 0 ? void 0 : document.documentMode) === 11;\r\n}\r\n/**\r\n * Checks whether the user agent is Edge.\r\n * @param {string} userAgent The browser user agent string.\r\n * @return {boolean} True if it is Edge.\r\n */\r\nfunction _isEdge(ua = getUA()) {\r\n    return /Edge\\/\\d+/.test(ua);\r\n}\r\n/**\r\n * @param {?string=} opt_userAgent The navigator user agent.\r\n * @return {boolean} Whether local storage is not synchronized between an iframe\r\n *     and a popup of the same domain.\r\n */\r\nfunction _isLocalStorageNotSynchronized(ua = getUA()) {\r\n    return _isIe11() || _isEdge(ua);\r\n}\r\n/** @return {boolean} Whether web storage is supported. */\r\nfunction _isWebStorageSupported() {\r\n    try {\r\n        const storage = self.localStorage;\r\n        const key = exp._generateEventId();\r\n        if (storage) {\r\n            // setItem will throw an exception if we cannot access WebStorage (e.g.,\r\n            // Safari in private mode).\r\n            storage['setItem'](key, '1');\r\n            storage['removeItem'](key);\r\n            // For browsers where iframe web storage does not synchronize with a popup\r\n            // of the same domain, indexedDB is used for persistent storage. These\r\n            // browsers include IE11 and Edge.\r\n            // Make sure it is supported (IE11 and Edge private mode does not support\r\n            // that).\r\n            if (_isLocalStorageNotSynchronized()) {\r\n                // In such browsers, if indexedDB is not supported, an iframe cannot be\r\n                // notified of the popup sign in result.\r\n                return isIndexedDBAvailable();\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n    catch (e) {\r\n        // localStorage is not available from a worker. Test availability of\r\n        // indexedDB.\r\n        return _isWorker() && isIndexedDBAvailable();\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * @param {?Object=} global The optional global scope.\r\n * @return {boolean} Whether current environment is a worker.\r\n */\r\nfunction _isWorker() {\r\n    // WorkerGlobalScope only defined in worker environment.\r\n    return (typeof global !== 'undefined' &&\r\n        'WorkerGlobalScope' in global &&\r\n        'importScripts' in global);\r\n}\r\nfunction _isPopupRedirectSupported() {\r\n    return ((_isHttpOrHttps() ||\r\n        isBrowserExtension() ||\r\n        _isAndroidOrIosCordovaScheme()) &&\r\n        // React Native with remote debugging reports its location.protocol as\r\n        // http.\r\n        !_isNativeEnvironment() &&\r\n        // Local storage has to be supported for browser popup and redirect\r\n        // operations to work.\r\n        _isWebStorageSupported() &&\r\n        // DOM, popups and redirects are not supported within a worker.\r\n        !_isWorker());\r\n}\r\n/** Quick check that indicates the platform *may* be Cordova */\r\nfunction _isLikelyCordova() {\r\n    return _isAndroidOrIosCordovaScheme() && typeof document !== 'undefined';\r\n}\r\nasync function _isCordova() {\r\n    if (!_isLikelyCordova()) {\r\n        return false;\r\n    }\r\n    return new Promise(resolve => {\r\n        const timeoutId = setTimeout(() => {\r\n            // We've waited long enough; the telltale Cordova event didn't happen\r\n            resolve(false);\r\n        }, CORDOVA_ONDEVICEREADY_TIMEOUT_MS);\r\n        document.addEventListener('deviceready', () => {\r\n            clearTimeout(timeoutId);\r\n            resolve(true);\r\n        });\r\n    });\r\n}\r\nfunction _getSelfWindow() {\r\n    return typeof window !== 'undefined' ? window : null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst Persistence = {\r\n    LOCAL: 'local',\r\n    NONE: 'none',\r\n    SESSION: 'session'\r\n};\r\nconst _assert$3 = exp._assert;\r\nconst PERSISTENCE_KEY = 'persistence';\r\n/**\r\n * Validates that an argument is a valid persistence value. If an invalid type\r\n * is specified, an error is thrown synchronously.\r\n */\r\nfunction _validatePersistenceArgument(auth, persistence) {\r\n    _assert$3(Object.values(Persistence).includes(persistence), auth, \"invalid-persistence-type\" /* INVALID_PERSISTENCE */);\r\n    // Validate if the specified type is supported in the current environment.\r\n    if (isReactNative()) {\r\n        // This is only supported in a browser.\r\n        _assert$3(persistence !== Persistence.SESSION, auth, \"unsupported-persistence-type\" /* UNSUPPORTED_PERSISTENCE */);\r\n        return;\r\n    }\r\n    if (isNode()) {\r\n        // Only none is supported in Node.js.\r\n        _assert$3(persistence === Persistence.NONE, auth, \"unsupported-persistence-type\" /* UNSUPPORTED_PERSISTENCE */);\r\n        return;\r\n    }\r\n    if (_isWorker()) {\r\n        // In a worker environment, either LOCAL or NONE are supported.\r\n        // If indexedDB not supported and LOCAL provided, throw an error\r\n        _assert$3(persistence === Persistence.NONE ||\r\n            (persistence === Persistence.LOCAL && isIndexedDBAvailable()), auth, \"unsupported-persistence-type\" /* UNSUPPORTED_PERSISTENCE */);\r\n        return;\r\n    }\r\n    // This is restricted by what the browser supports.\r\n    _assert$3(persistence === Persistence.NONE || _isWebStorageSupported(), auth, \"unsupported-persistence-type\" /* UNSUPPORTED_PERSISTENCE */);\r\n}\r\nasync function _savePersistenceForRedirect(auth) {\r\n    await auth._initializationPromise;\r\n    const session = getSessionStorageIfAvailable();\r\n    const key = exp._persistenceKeyName(PERSISTENCE_KEY, auth.config.apiKey, auth.name);\r\n    if (session) {\r\n        session.setItem(key, auth._getPersistence());\r\n    }\r\n}\r\nfunction _getPersistencesFromRedirect(apiKey, appName) {\r\n    const session = getSessionStorageIfAvailable();\r\n    if (!session) {\r\n        return [];\r\n    }\r\n    const key = exp._persistenceKeyName(PERSISTENCE_KEY, apiKey, appName);\r\n    const persistence = session.getItem(key);\r\n    switch (persistence) {\r\n        case Persistence.NONE:\r\n            return [exp.inMemoryPersistence];\r\n        case Persistence.LOCAL:\r\n            return [exp.indexedDBLocalPersistence, exp.browserSessionPersistence];\r\n        case Persistence.SESSION:\r\n            return [exp.browserSessionPersistence];\r\n        default:\r\n            return [];\r\n    }\r\n}\r\n/** Returns session storage, or null if the property access errors */\r\nfunction getSessionStorageIfAvailable() {\r\n    var _a;\r\n    try {\r\n        return ((_a = _getSelfWindow()) === null || _a === void 0 ? void 0 : _a.sessionStorage) || null;\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst _assert$2 = exp._assert;\r\n/** Platform-agnostic popup-redirect resolver */\r\nclass CompatPopupRedirectResolver {\r\n    constructor() {\r\n        // Create both resolvers for dynamic resolution later\r\n        this.browserResolver = exp._getInstance(exp.browserPopupRedirectResolver);\r\n        this.cordovaResolver = exp._getInstance(exp.cordovaPopupRedirectResolver);\r\n        // The actual resolver in use: either browserResolver or cordovaResolver.\r\n        this.underlyingResolver = null;\r\n        this._redirectPersistence = exp.browserSessionPersistence;\r\n        this._completeRedirectFn = exp._getRedirectResult;\r\n        this._overrideRedirectResult = exp._overrideRedirectResult;\r\n    }\r\n    async _initialize(auth) {\r\n        await this.selectUnderlyingResolver();\r\n        return this.assertedUnderlyingResolver._initialize(auth);\r\n    }\r\n    async _openPopup(auth, provider, authType, eventId) {\r\n        await this.selectUnderlyingResolver();\r\n        return this.assertedUnderlyingResolver._openPopup(auth, provider, authType, eventId);\r\n    }\r\n    async _openRedirect(auth, provider, authType, eventId) {\r\n        await this.selectUnderlyingResolver();\r\n        return this.assertedUnderlyingResolver._openRedirect(auth, provider, authType, eventId);\r\n    }\r\n    _isIframeWebStorageSupported(auth, cb) {\r\n        this.assertedUnderlyingResolver._isIframeWebStorageSupported(auth, cb);\r\n    }\r\n    _originValidation(auth) {\r\n        return this.assertedUnderlyingResolver._originValidation(auth);\r\n    }\r\n    get _shouldInitProactively() {\r\n        return _isLikelyCordova() || this.browserResolver._shouldInitProactively;\r\n    }\r\n    get assertedUnderlyingResolver() {\r\n        _assert$2(this.underlyingResolver, \"internal-error\" /* INTERNAL_ERROR */);\r\n        return this.underlyingResolver;\r\n    }\r\n    async selectUnderlyingResolver() {\r\n        if (this.underlyingResolver) {\r\n            return;\r\n        }\r\n        // We haven't yet determined whether or not we're in Cordova; go ahead\r\n        // and determine that state now.\r\n        const isCordova = await _isCordova();\r\n        this.underlyingResolver = isCordova\r\n            ? this.cordovaResolver\r\n            : this.browserResolver;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction unwrap(object) {\r\n    return object.unwrap();\r\n}\r\nfunction wrapped(object) {\r\n    return object.wrapped();\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction credentialFromResponse(userCredential) {\r\n    return credentialFromObject(userCredential);\r\n}\r\nfunction attachExtraErrorFields(auth, e) {\r\n    var _a, _b;\r\n    // The response contains all fields from the server which may or may not\r\n    // actually match the underlying type\r\n    const response = (_a = e.customData) === null || _a === void 0 ? void 0 : _a._tokenResponse;\r\n    if (((_b = e) === null || _b === void 0 ? void 0 : _b.code) === 'auth/multi-factor-auth-required') {\r\n        const mfaErr = e;\r\n        mfaErr.resolver = new MultiFactorResolver(auth, exp.getMultiFactorResolver(auth, e));\r\n    }\r\n    else if (response) {\r\n        const credential = credentialFromObject(e);\r\n        const credErr = e;\r\n        if (credential) {\r\n            credErr.credential = credential;\r\n            credErr.tenantId = response.tenantId || undefined;\r\n            credErr.email = response.email || undefined;\r\n            credErr.phoneNumber = response.phoneNumber || undefined;\r\n        }\r\n    }\r\n}\r\nfunction credentialFromObject(object) {\r\n    const { _tokenResponse } = (object instanceof FirebaseError ? object.customData : object);\r\n    if (!_tokenResponse) {\r\n        return null;\r\n    }\r\n    // Handle phone Auth credential responses, as they have a different format\r\n    // from other backend responses (i.e. no providerId). This is also only the\r\n    // case for user credentials (does not work for errors).\r\n    if (!(object instanceof FirebaseError)) {\r\n        if ('temporaryProof' in _tokenResponse && 'phoneNumber' in _tokenResponse) {\r\n            return exp.PhoneAuthProvider.credentialFromResult(object);\r\n        }\r\n    }\r\n    const providerId = _tokenResponse.providerId;\r\n    // Email and password is not supported as there is no situation where the\r\n    // server would return the password to the client.\r\n    if (!providerId || providerId === exp.ProviderId.PASSWORD) {\r\n        return null;\r\n    }\r\n    let provider;\r\n    switch (providerId) {\r\n        case exp.ProviderId.GOOGLE:\r\n            provider = exp.GoogleAuthProvider;\r\n            break;\r\n        case exp.ProviderId.FACEBOOK:\r\n            provider = exp.FacebookAuthProvider;\r\n            break;\r\n        case exp.ProviderId.GITHUB:\r\n            provider = exp.GithubAuthProvider;\r\n            break;\r\n        case exp.ProviderId.TWITTER:\r\n            provider = exp.TwitterAuthProvider;\r\n            break;\r\n        default:\r\n            const { oauthIdToken, oauthAccessToken, oauthTokenSecret, pendingToken, nonce } = _tokenResponse;\r\n            if (!oauthAccessToken &&\r\n                !oauthTokenSecret &&\r\n                !oauthIdToken &&\r\n                !pendingToken) {\r\n                return null;\r\n            }\r\n            // TODO(avolkovi): uncomment this and get it working with SAML & OIDC\r\n            if (pendingToken) {\r\n                if (providerId.startsWith('saml.')) {\r\n                    return exp.SAMLAuthCredential._create(providerId, pendingToken);\r\n                }\r\n                else {\r\n                    // OIDC and non-default providers excluding Twitter.\r\n                    return exp.OAuthCredential._fromParams({\r\n                        providerId,\r\n                        signInMethod: providerId,\r\n                        pendingToken,\r\n                        idToken: oauthIdToken,\r\n                        accessToken: oauthAccessToken\r\n                    });\r\n                }\r\n            }\r\n            return new exp.OAuthProvider(providerId).credential({\r\n                idToken: oauthIdToken,\r\n                accessToken: oauthAccessToken,\r\n                rawNonce: nonce\r\n            });\r\n    }\r\n    return object instanceof FirebaseError\r\n        ? provider.credentialFromError(object)\r\n        : provider.credentialFromResult(object);\r\n}\r\nfunction convertCredential(auth, credentialPromise) {\r\n    return credentialPromise\r\n        .catch(e => {\r\n        if (e instanceof FirebaseError) {\r\n            attachExtraErrorFields(auth, e);\r\n        }\r\n        throw e;\r\n    })\r\n        .then(credential => {\r\n        const operationType = credential.operationType;\r\n        const user = credential.user;\r\n        return {\r\n            operationType,\r\n            credential: credentialFromResponse(credential),\r\n            additionalUserInfo: exp.getAdditionalUserInfo(credential),\r\n            user: User.getOrCreate(user)\r\n        };\r\n    });\r\n}\r\nasync function convertConfirmationResult(auth, confirmationResultPromise) {\r\n    const confirmationResultExp = await confirmationResultPromise;\r\n    return {\r\n        verificationId: confirmationResultExp.verificationId,\r\n        confirm: (verificationCode) => convertCredential(auth, confirmationResultExp.confirm(verificationCode))\r\n    };\r\n}\r\nclass MultiFactorResolver {\r\n    constructor(auth, resolver) {\r\n        this.resolver = resolver;\r\n        this.auth = wrapped(auth);\r\n    }\r\n    get session() {\r\n        return this.resolver.session;\r\n    }\r\n    get hints() {\r\n        return this.resolver.hints;\r\n    }\r\n    resolveSignIn(assertion) {\r\n        return convertCredential(unwrap(this.auth), this.resolver.resolveSignIn(assertion));\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass User {\r\n    constructor(_delegate) {\r\n        this._delegate = _delegate;\r\n        this.multiFactor = exp.multiFactor(_delegate);\r\n    }\r\n    static getOrCreate(user) {\r\n        if (!User.USER_MAP.has(user)) {\r\n            User.USER_MAP.set(user, new User(user));\r\n        }\r\n        return User.USER_MAP.get(user);\r\n    }\r\n    delete() {\r\n        return this._delegate.delete();\r\n    }\r\n    reload() {\r\n        return this._delegate.reload();\r\n    }\r\n    toJSON() {\r\n        return this._delegate.toJSON();\r\n    }\r\n    getIdTokenResult(forceRefresh) {\r\n        return this._delegate.getIdTokenResult(forceRefresh);\r\n    }\r\n    getIdToken(forceRefresh) {\r\n        return this._delegate.getIdToken(forceRefresh);\r\n    }\r\n    linkAndRetrieveDataWithCredential(credential) {\r\n        return this.linkWithCredential(credential);\r\n    }\r\n    async linkWithCredential(credential) {\r\n        return convertCredential(this.auth, exp.linkWithCredential(this._delegate, credential));\r\n    }\r\n    async linkWithPhoneNumber(phoneNumber, applicationVerifier) {\r\n        return convertConfirmationResult(this.auth, exp.linkWithPhoneNumber(this._delegate, phoneNumber, applicationVerifier));\r\n    }\r\n    async linkWithPopup(provider) {\r\n        return convertCredential(this.auth, exp.linkWithPopup(this._delegate, provider, CompatPopupRedirectResolver));\r\n    }\r\n    async linkWithRedirect(provider) {\r\n        await _savePersistenceForRedirect(exp._castAuth(this.auth));\r\n        return exp.linkWithRedirect(this._delegate, provider, CompatPopupRedirectResolver);\r\n    }\r\n    reauthenticateAndRetrieveDataWithCredential(credential) {\r\n        return this.reauthenticateWithCredential(credential);\r\n    }\r\n    async reauthenticateWithCredential(credential) {\r\n        return convertCredential(this.auth, exp.reauthenticateWithCredential(this._delegate, credential));\r\n    }\r\n    reauthenticateWithPhoneNumber(phoneNumber, applicationVerifier) {\r\n        return convertConfirmationResult(this.auth, exp.reauthenticateWithPhoneNumber(this._delegate, phoneNumber, applicationVerifier));\r\n    }\r\n    reauthenticateWithPopup(provider) {\r\n        return convertCredential(this.auth, exp.reauthenticateWithPopup(this._delegate, provider, CompatPopupRedirectResolver));\r\n    }\r\n    async reauthenticateWithRedirect(provider) {\r\n        await _savePersistenceForRedirect(exp._castAuth(this.auth));\r\n        return exp.reauthenticateWithRedirect(this._delegate, provider, CompatPopupRedirectResolver);\r\n    }\r\n    sendEmailVerification(actionCodeSettings) {\r\n        return exp.sendEmailVerification(this._delegate, actionCodeSettings);\r\n    }\r\n    async unlink(providerId) {\r\n        await exp.unlink(this._delegate, providerId);\r\n        return this;\r\n    }\r\n    updateEmail(newEmail) {\r\n        return exp.updateEmail(this._delegate, newEmail);\r\n    }\r\n    updatePassword(newPassword) {\r\n        return exp.updatePassword(this._delegate, newPassword);\r\n    }\r\n    updatePhoneNumber(phoneCredential) {\r\n        return exp.updatePhoneNumber(this._delegate, phoneCredential);\r\n    }\r\n    updateProfile(profile) {\r\n        return exp.updateProfile(this._delegate, profile);\r\n    }\r\n    verifyBeforeUpdateEmail(newEmail, actionCodeSettings) {\r\n        return exp.verifyBeforeUpdateEmail(this._delegate, newEmail, actionCodeSettings);\r\n    }\r\n    get emailVerified() {\r\n        return this._delegate.emailVerified;\r\n    }\r\n    get isAnonymous() {\r\n        return this._delegate.isAnonymous;\r\n    }\r\n    get metadata() {\r\n        return this._delegate.metadata;\r\n    }\r\n    get phoneNumber() {\r\n        return this._delegate.phoneNumber;\r\n    }\r\n    get providerData() {\r\n        return this._delegate.providerData;\r\n    }\r\n    get refreshToken() {\r\n        return this._delegate.refreshToken;\r\n    }\r\n    get tenantId() {\r\n        return this._delegate.tenantId;\r\n    }\r\n    get displayName() {\r\n        return this._delegate.displayName;\r\n    }\r\n    get email() {\r\n        return this._delegate.email;\r\n    }\r\n    get photoURL() {\r\n        return this._delegate.photoURL;\r\n    }\r\n    get providerId() {\r\n        return this._delegate.providerId;\r\n    }\r\n    get uid() {\r\n        return this._delegate.uid;\r\n    }\r\n    get auth() {\r\n        return this._delegate.auth;\r\n    }\r\n}\r\n// Maintain a map so that there's always a 1:1 mapping between new User and\r\n// legacy compat users\r\nUser.USER_MAP = new WeakMap();\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst _assert$1 = exp._assert;\r\nclass Auth {\r\n    constructor(app, provider) {\r\n        this.app = app;\r\n        if (provider.isInitialized()) {\r\n            this._delegate = provider.getImmediate();\r\n            this.linkUnderlyingAuth();\r\n            return;\r\n        }\r\n        const { apiKey } = app.options;\r\n        // TODO: platform needs to be determined using heuristics\r\n        _assert$1(apiKey, \"invalid-api-key\" /* INVALID_API_KEY */, {\r\n            appName: app.name\r\n        });\r\n        // TODO: platform needs to be determined using heuristics\r\n        _assert$1(apiKey, \"invalid-api-key\" /* INVALID_API_KEY */, {\r\n            appName: app.name\r\n        });\r\n        // Only use a popup/redirect resolver in browser environments\r\n        const resolver = typeof window !== 'undefined' ? CompatPopupRedirectResolver : undefined;\r\n        this._delegate = provider.initialize({\r\n            options: {\r\n                persistence: buildPersistenceHierarchy(apiKey, app.name),\r\n                popupRedirectResolver: resolver\r\n            }\r\n        });\r\n        this._delegate._updateErrorMap(exp.debugErrorMap);\r\n        this.linkUnderlyingAuth();\r\n    }\r\n    get emulatorConfig() {\r\n        return this._delegate.emulatorConfig;\r\n    }\r\n    get currentUser() {\r\n        if (!this._delegate.currentUser) {\r\n            return null;\r\n        }\r\n        return User.getOrCreate(this._delegate.currentUser);\r\n    }\r\n    get languageCode() {\r\n        return this._delegate.languageCode;\r\n    }\r\n    set languageCode(languageCode) {\r\n        this._delegate.languageCode = languageCode;\r\n    }\r\n    get settings() {\r\n        return this._delegate.settings;\r\n    }\r\n    get tenantId() {\r\n        return this._delegate.tenantId;\r\n    }\r\n    set tenantId(tid) {\r\n        this._delegate.tenantId = tid;\r\n    }\r\n    useDeviceLanguage() {\r\n        this._delegate.useDeviceLanguage();\r\n    }\r\n    signOut() {\r\n        return this._delegate.signOut();\r\n    }\r\n    useEmulator(url, options) {\r\n        exp.connectAuthEmulator(this._delegate, url, options);\r\n    }\r\n    applyActionCode(code) {\r\n        return exp.applyActionCode(this._delegate, code);\r\n    }\r\n    checkActionCode(code) {\r\n        return exp.checkActionCode(this._delegate, code);\r\n    }\r\n    confirmPasswordReset(code, newPassword) {\r\n        return exp.confirmPasswordReset(this._delegate, code, newPassword);\r\n    }\r\n    async createUserWithEmailAndPassword(email, password) {\r\n        return convertCredential(this._delegate, exp.createUserWithEmailAndPassword(this._delegate, email, password));\r\n    }\r\n    fetchProvidersForEmail(email) {\r\n        return this.fetchSignInMethodsForEmail(email);\r\n    }\r\n    fetchSignInMethodsForEmail(email) {\r\n        return exp.fetchSignInMethodsForEmail(this._delegate, email);\r\n    }\r\n    isSignInWithEmailLink(emailLink) {\r\n        return exp.isSignInWithEmailLink(this._delegate, emailLink);\r\n    }\r\n    async getRedirectResult() {\r\n        _assert$1(_isPopupRedirectSupported(), this._delegate, \"operation-not-supported-in-this-environment\" /* OPERATION_NOT_SUPPORTED */);\r\n        const credential = await exp.getRedirectResult(this._delegate, CompatPopupRedirectResolver);\r\n        if (!credential) {\r\n            return {\r\n                credential: null,\r\n                user: null\r\n            };\r\n        }\r\n        return convertCredential(this._delegate, Promise.resolve(credential));\r\n    }\r\n    // This function should only be called by frameworks (e.g. FirebaseUI-web) to log their usage.\r\n    // It is not intended for direct use by developer apps. NO jsdoc here to intentionally leave it\r\n    // out of autogenerated documentation pages to reduce accidental misuse.\r\n    addFrameworkForLogging(framework) {\r\n        exp.addFrameworkForLogging(this._delegate, framework);\r\n    }\r\n    onAuthStateChanged(nextOrObserver, errorFn, completed) {\r\n        const { next, error, complete } = wrapObservers(nextOrObserver, errorFn, completed);\r\n        return this._delegate.onAuthStateChanged(next, error, complete);\r\n    }\r\n    onIdTokenChanged(nextOrObserver, errorFn, completed) {\r\n        const { next, error, complete } = wrapObservers(nextOrObserver, errorFn, completed);\r\n        return this._delegate.onIdTokenChanged(next, error, complete);\r\n    }\r\n    sendSignInLinkToEmail(email, actionCodeSettings) {\r\n        return exp.sendSignInLinkToEmail(this._delegate, email, actionCodeSettings);\r\n    }\r\n    sendPasswordResetEmail(email, actionCodeSettings) {\r\n        return exp.sendPasswordResetEmail(this._delegate, email, actionCodeSettings || undefined);\r\n    }\r\n    async setPersistence(persistence) {\r\n        _validatePersistenceArgument(this._delegate, persistence);\r\n        let converted;\r\n        switch (persistence) {\r\n            case Persistence.SESSION:\r\n                converted = exp.browserSessionPersistence;\r\n                break;\r\n            case Persistence.LOCAL:\r\n                // Not using isIndexedDBAvailable() since it only checks if indexedDB is defined.\r\n                const isIndexedDBFullySupported = await exp\r\n                    ._getInstance(exp.indexedDBLocalPersistence)\r\n                    ._isAvailable();\r\n                converted = isIndexedDBFullySupported\r\n                    ? exp.indexedDBLocalPersistence\r\n                    : exp.browserLocalPersistence;\r\n                break;\r\n            case Persistence.NONE:\r\n                converted = exp.inMemoryPersistence;\r\n                break;\r\n            default:\r\n                return exp._fail(\"argument-error\" /* ARGUMENT_ERROR */, {\r\n                    appName: this._delegate.name\r\n                });\r\n        }\r\n        return this._delegate.setPersistence(converted);\r\n    }\r\n    signInAndRetrieveDataWithCredential(credential) {\r\n        return this.signInWithCredential(credential);\r\n    }\r\n    signInAnonymously() {\r\n        return convertCredential(this._delegate, exp.signInAnonymously(this._delegate));\r\n    }\r\n    signInWithCredential(credential) {\r\n        return convertCredential(this._delegate, exp.signInWithCredential(this._delegate, credential));\r\n    }\r\n    signInWithCustomToken(token) {\r\n        return convertCredential(this._delegate, exp.signInWithCustomToken(this._delegate, token));\r\n    }\r\n    signInWithEmailAndPassword(email, password) {\r\n        return convertCredential(this._delegate, exp.signInWithEmailAndPassword(this._delegate, email, password));\r\n    }\r\n    signInWithEmailLink(email, emailLink) {\r\n        return convertCredential(this._delegate, exp.signInWithEmailLink(this._delegate, email, emailLink));\r\n    }\r\n    signInWithPhoneNumber(phoneNumber, applicationVerifier) {\r\n        return convertConfirmationResult(this._delegate, exp.signInWithPhoneNumber(this._delegate, phoneNumber, applicationVerifier));\r\n    }\r\n    async signInWithPopup(provider) {\r\n        _assert$1(_isPopupRedirectSupported(), this._delegate, \"operation-not-supported-in-this-environment\" /* OPERATION_NOT_SUPPORTED */);\r\n        return convertCredential(this._delegate, exp.signInWithPopup(this._delegate, provider, CompatPopupRedirectResolver));\r\n    }\r\n    async signInWithRedirect(provider) {\r\n        _assert$1(_isPopupRedirectSupported(), this._delegate, \"operation-not-supported-in-this-environment\" /* OPERATION_NOT_SUPPORTED */);\r\n        await _savePersistenceForRedirect(this._delegate);\r\n        return exp.signInWithRedirect(this._delegate, provider, CompatPopupRedirectResolver);\r\n    }\r\n    updateCurrentUser(user) {\r\n        // remove ts-ignore once overloads are defined for exp functions to accept compat objects\r\n        // @ts-ignore\r\n        return this._delegate.updateCurrentUser(user);\r\n    }\r\n    verifyPasswordResetCode(code) {\r\n        return exp.verifyPasswordResetCode(this._delegate, code);\r\n    }\r\n    unwrap() {\r\n        return this._delegate;\r\n    }\r\n    _delete() {\r\n        return this._delegate._delete();\r\n    }\r\n    linkUnderlyingAuth() {\r\n        this._delegate.wrapped = () => this;\r\n    }\r\n}\r\nAuth.Persistence = Persistence;\r\nfunction wrapObservers(nextOrObserver, error, complete) {\r\n    let next = nextOrObserver;\r\n    if (typeof nextOrObserver !== 'function') {\r\n        ({ next, error, complete } = nextOrObserver);\r\n    }\r\n    // We know 'next' is now a function\r\n    const oldNext = next;\r\n    const newNext = (user) => oldNext(user && User.getOrCreate(user));\r\n    return {\r\n        next: newNext,\r\n        error: error,\r\n        complete\r\n    };\r\n}\r\nfunction buildPersistenceHierarchy(apiKey, appName) {\r\n    // Note this is slightly different behavior: in this case, the stored\r\n    // persistence is checked *first* rather than last. This is because we want\r\n    // to prefer stored persistence type in the hierarchy. This is an empty\r\n    // array if window is not available or there is no pending redirect\r\n    const persistences = _getPersistencesFromRedirect(apiKey, appName);\r\n    // If \"self\" is available, add indexedDB\r\n    if (typeof self !== 'undefined' &&\r\n        !persistences.includes(exp.indexedDBLocalPersistence)) {\r\n        persistences.push(exp.indexedDBLocalPersistence);\r\n    }\r\n    // If \"window\" is available, add HTML Storage persistences\r\n    if (typeof window !== 'undefined') {\r\n        for (const persistence of [\r\n            exp.browserLocalPersistence,\r\n            exp.browserSessionPersistence\r\n        ]) {\r\n            if (!persistences.includes(persistence)) {\r\n                persistences.push(persistence);\r\n            }\r\n        }\r\n    }\r\n    // Add in-memory as a final fallback\r\n    if (!persistences.includes(exp.inMemoryPersistence)) {\r\n        persistences.push(exp.inMemoryPersistence);\r\n    }\r\n    return persistences;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass PhoneAuthProvider {\r\n    constructor() {\r\n        this.providerId = 'phone';\r\n        // TODO: remove ts-ignore when moving types from auth-types to auth-compat\r\n        // @ts-ignore\r\n        this._delegate = new exp.PhoneAuthProvider(unwrap(firebase.auth()));\r\n    }\r\n    static credential(verificationId, verificationCode) {\r\n        return exp.PhoneAuthProvider.credential(verificationId, verificationCode);\r\n    }\r\n    verifyPhoneNumber(phoneInfoOptions, applicationVerifier) {\r\n        return this._delegate.verifyPhoneNumber(\r\n        // The implementation matches but the types are subtly incompatible\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        phoneInfoOptions, applicationVerifier);\r\n    }\r\n    unwrap() {\r\n        return this._delegate;\r\n    }\r\n}\r\nPhoneAuthProvider.PHONE_SIGN_IN_METHOD = exp.PhoneAuthProvider.PHONE_SIGN_IN_METHOD;\r\nPhoneAuthProvider.PROVIDER_ID = exp.PhoneAuthProvider.PROVIDER_ID;\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst _assert = exp._assert;\r\nclass RecaptchaVerifier {\r\n    constructor(container, parameters, app = firebase.app()) {\r\n        var _a;\r\n        // API key is required for web client RPC calls.\r\n        _assert((_a = app.options) === null || _a === void 0 ? void 0 : _a.apiKey, \"invalid-api-key\" /* INVALID_API_KEY */, {\r\n            appName: app.name\r\n        });\r\n        this._delegate = new exp.RecaptchaVerifier(container, \r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        parameters, \r\n        // TODO: remove ts-ignore when moving types from auth-types to auth-compat\r\n        // @ts-ignore\r\n        app.auth());\r\n        this.type = this._delegate.type;\r\n    }\r\n    clear() {\r\n        this._delegate.clear();\r\n    }\r\n    render() {\r\n        return this._delegate.render();\r\n    }\r\n    verify() {\r\n        return this._delegate.verify();\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst AUTH_TYPE = 'auth-compat';\r\n// Create auth components to register with firebase.\r\n// Provides Auth public APIs.\r\nfunction registerAuthCompat(instance) {\r\n    instance.INTERNAL.registerComponent(new Component(AUTH_TYPE, container => {\r\n        // getImmediate for FirebaseApp will always succeed\r\n        const app = container.getProvider('app-compat').getImmediate();\r\n        const authProvider = container.getProvider('auth');\r\n        return new Auth(app, authProvider);\r\n    }, \"PUBLIC\" /* PUBLIC */)\r\n        .setServiceProps({\r\n        ActionCodeInfo: {\r\n            Operation: {\r\n                EMAIL_SIGNIN: exp.ActionCodeOperation.EMAIL_SIGNIN,\r\n                PASSWORD_RESET: exp.ActionCodeOperation.PASSWORD_RESET,\r\n                RECOVER_EMAIL: exp.ActionCodeOperation.RECOVER_EMAIL,\r\n                REVERT_SECOND_FACTOR_ADDITION: exp.ActionCodeOperation.REVERT_SECOND_FACTOR_ADDITION,\r\n                VERIFY_AND_CHANGE_EMAIL: exp.ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL,\r\n                VERIFY_EMAIL: exp.ActionCodeOperation.VERIFY_EMAIL\r\n            }\r\n        },\r\n        EmailAuthProvider: exp.EmailAuthProvider,\r\n        FacebookAuthProvider: exp.FacebookAuthProvider,\r\n        GithubAuthProvider: exp.GithubAuthProvider,\r\n        GoogleAuthProvider: exp.GoogleAuthProvider,\r\n        OAuthProvider: exp.OAuthProvider,\r\n        SAMLAuthProvider: exp.SAMLAuthProvider,\r\n        PhoneAuthProvider: PhoneAuthProvider,\r\n        PhoneMultiFactorGenerator: exp.PhoneMultiFactorGenerator,\r\n        RecaptchaVerifier: RecaptchaVerifier,\r\n        TwitterAuthProvider: exp.TwitterAuthProvider,\r\n        Auth,\r\n        AuthCredential: exp.AuthCredential,\r\n        Error: FirebaseError\r\n    })\r\n        .setInstantiationMode(\"LAZY\" /* LAZY */)\r\n        .setMultipleInstances(false));\r\n    instance.registerVersion(name, version);\r\n}\r\nregisterAuthCompat(firebase);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}